/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.jniclient.impl.db;

import de.uni_koblenz.jgralab.impl.db.VertexImpl;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class NodeImpl extends VertexImpl implements de.uni_koblenz.jgralabtest.schemas.jniclient.Node, de.uni_koblenz.jgralab.Vertex {

	protected boolean _b;

	protected de.uni_koblenz.jgralabtest.schemas.jniclient.Color _color;

	protected double _d;

	protected int _i;

	protected long _l;

	protected org.pcollections.PVector<java.lang.Double> _ld;

	protected org.pcollections.PVector<java.lang.Integer> _li;

	protected org.pcollections.PVector<java.lang.Long> _ll;

	protected org.pcollections.PVector<java.lang.String> _ls;

	protected java.lang.String _s;

	public NodeImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.jniclient.Node.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.jniclient.Node.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("b")) return (T) (java.lang.Boolean) is_b();
		if (attributeName.equals("color")) return (T) get_color();
		if (attributeName.equals("d")) return (T) (java.lang.Double) get_d();
		if (attributeName.equals("i")) return (T) (java.lang.Integer) get_i();
		if (attributeName.equals("l")) return (T) (java.lang.Long) get_l();
		if (attributeName.equals("ld")) return (T) get_ld();
		if (attributeName.equals("li")) return (T) get_li();
		if (attributeName.equals("ll")) return (T) get_ll();
		if (attributeName.equals("ls")) return (T) get_ls();
		if (attributeName.equals("s")) return (T) get_s();
		throw new NoSuchAttributeException("Node doesn't contain an attribute " + attributeName);
	}

	@SuppressWarnings("unchecked")
	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("b")) {
			set_b((java.lang.Boolean) data);
			return;
		}
		if (attributeName.equals("color")) {
			if (data instanceof String) {
				set_color(de.uni_koblenz.jgralabtest.schemas.jniclient.Color.valueOfPermitNull((String) data));
			} else {
				set_color((de.uni_koblenz.jgralabtest.schemas.jniclient.Color) data);
			}
			return;
		}
		if (attributeName.equals("d")) {
			set_d((java.lang.Double) data);
			return;
		}
		if (attributeName.equals("i")) {
			set_i((java.lang.Integer) data);
			return;
		}
		if (attributeName.equals("l")) {
			set_l((java.lang.Long) data);
			return;
		}
		if (attributeName.equals("ld")) {
			set_ld((org.pcollections.PVector<java.lang.Double>) data);
			return;
		}
		if (attributeName.equals("li")) {
			set_li((org.pcollections.PVector<java.lang.Integer>) data);
			return;
		}
		if (attributeName.equals("ll")) {
			set_ll((org.pcollections.PVector<java.lang.Long>) data);
			return;
		}
		if (attributeName.equals("ls")) {
			set_ls((org.pcollections.PVector<java.lang.String>) data);
			return;
		}
		if (attributeName.equals("s")) {
			set_s((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("Node doesn't contain an attribute " + attributeName);
	}

	public boolean is_b() {
		return _b;
	}

	public void set_b(boolean _b) {
		this._b = _b;
		attributeChanged("b");
	}

	public de.uni_koblenz.jgralabtest.schemas.jniclient.Color get_color() {
		return _color;
	}

	public void set_color(de.uni_koblenz.jgralabtest.schemas.jniclient.Color _color) {
		this._color = _color;
		attributeChanged("color");
	}

	public double get_d() {
		return _d;
	}

	public void set_d(double _d) {
		this._d = _d;
		attributeChanged("d");
	}

	public int get_i() {
		return _i;
	}

	public void set_i(int _i) {
		this._i = _i;
		attributeChanged("i");
	}

	public long get_l() {
		return _l;
	}

	public void set_l(long _l) {
		this._l = _l;
		attributeChanged("l");
	}

	public org.pcollections.PVector<java.lang.Double> get_ld() {
		return _ld;
	}

	public void set_ld(org.pcollections.PVector<java.lang.Double> _ld) {
		this._ld = _ld;
		attributeChanged("ld");
	}

	public org.pcollections.PVector<java.lang.Integer> get_li() {
		return _li;
	}

	public void set_li(org.pcollections.PVector<java.lang.Integer> _li) {
		this._li = _li;
		attributeChanged("li");
	}

	public org.pcollections.PVector<java.lang.Long> get_ll() {
		return _ll;
	}

	public void set_ll(org.pcollections.PVector<java.lang.Long> _ll) {
		this._ll = _ll;
		attributeChanged("ll");
	}

	public org.pcollections.PVector<java.lang.String> get_ls() {
		return _ls;
	}

	public void set_ls(org.pcollections.PVector<java.lang.String> _ls) {
		this._ls = _ls;
		attributeChanged("ls");
	}

	public java.lang.String get_s() {
		return _s;
	}

	public void set_s(java.lang.String _s) {
		this._s = _s;
		attributeChanged("s");
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_b = io.matchBoolean();
		set_b(_b);
		_color = de.uni_koblenz.jgralabtest.schemas.jniclient.Color.valueOfPermitNull(io.matchEnumConstant());
		set_color(_color);
		_d = io.matchDouble();
		set_d(_d);
		_i = io.matchInteger();
		set_i(_i);
		_l = io.matchLong();
		set_l(_l);
		
		if (io.isNextToken("[")) {
			org.pcollections.PVector<java.lang.Double> $_ld = de.uni_koblenz.jgralab.JGraLab.vector();
			io.match("[");
			while (!io.isNextToken("]")) {
				double $_ldElement;
				$_ldElement = io.matchDouble();
				$_ld = $_ld.plus($_ldElement);
			}
			io.match("]");
			_ld = $_ld;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match(); 
			_ld = null;
		} else {
			_ld = null;
		}
		set_ld(_ld);
		
		if (io.isNextToken("[")) {
			org.pcollections.PVector<java.lang.Integer> $_li = de.uni_koblenz.jgralab.JGraLab.vector();
			io.match("[");
			while (!io.isNextToken("]")) {
				int $_liElement;
				$_liElement = io.matchInteger();
				$_li = $_li.plus($_liElement);
			}
			io.match("]");
			_li = $_li;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match(); 
			_li = null;
		} else {
			_li = null;
		}
		set_li(_li);
		
		if (io.isNextToken("[")) {
			org.pcollections.PVector<java.lang.Long> $_ll = de.uni_koblenz.jgralab.JGraLab.vector();
			io.match("[");
			while (!io.isNextToken("]")) {
				long $_llElement;
				$_llElement = io.matchLong();
				$_ll = $_ll.plus($_llElement);
			}
			io.match("]");
			_ll = $_ll;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match(); 
			_ll = null;
		} else {
			_ll = null;
		}
		set_ll(_ll);
		
		if (io.isNextToken("[")) {
			org.pcollections.PVector<java.lang.String> $_ls = de.uni_koblenz.jgralab.JGraLab.vector();
			io.match("[");
			while (!io.isNextToken("]")) {
				java.lang.String $_lsElement;
				$_lsElement = io.matchUtfString();
				$_ls = $_ls.plus($_lsElement);
			}
			io.match("]");
			_ls = $_ls;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match(); 
			_ls = null;
		} else {
			_ls = null;
		}
		set_ls(_ls);
		_s = io.matchUtfString();
		set_s(_s);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("b")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_b = io.matchBoolean();
			set_b(_b);
			return;
		}
		if (attributeName.equals("color")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_color = de.uni_koblenz.jgralabtest.schemas.jniclient.Color.valueOfPermitNull(io.matchEnumConstant());
			set_color(_color);
			return;
		}
		if (attributeName.equals("d")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_d = io.matchDouble();
			set_d(_d);
			return;
		}
		if (attributeName.equals("i")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_i = io.matchInteger();
			set_i(_i);
			return;
		}
		if (attributeName.equals("l")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_l = io.matchLong();
			set_l(_l);
			return;
		}
		if (attributeName.equals("ld")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("[")) {
				org.pcollections.PVector<java.lang.Double> $_ld = de.uni_koblenz.jgralab.JGraLab.vector();
				io.match("[");
				while (!io.isNextToken("]")) {
					double $_ldElement;
					$_ldElement = io.matchDouble();
					$_ld = $_ld.plus($_ldElement);
				}
				io.match("]");
				_ld = $_ld;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match(); 
				_ld = null;
			} else {
				_ld = null;
			}
			set_ld(_ld);
			return;
		}
		if (attributeName.equals("li")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("[")) {
				org.pcollections.PVector<java.lang.Integer> $_li = de.uni_koblenz.jgralab.JGraLab.vector();
				io.match("[");
				while (!io.isNextToken("]")) {
					int $_liElement;
					$_liElement = io.matchInteger();
					$_li = $_li.plus($_liElement);
				}
				io.match("]");
				_li = $_li;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match(); 
				_li = null;
			} else {
				_li = null;
			}
			set_li(_li);
			return;
		}
		if (attributeName.equals("ll")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("[")) {
				org.pcollections.PVector<java.lang.Long> $_ll = de.uni_koblenz.jgralab.JGraLab.vector();
				io.match("[");
				while (!io.isNextToken("]")) {
					long $_llElement;
					$_llElement = io.matchLong();
					$_ll = $_ll.plus($_llElement);
				}
				io.match("]");
				_ll = $_ll;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match(); 
				_ll = null;
			} else {
				_ll = null;
			}
			set_ll(_ll);
			return;
		}
		if (attributeName.equals("ls")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("[")) {
				org.pcollections.PVector<java.lang.String> $_ls = de.uni_koblenz.jgralab.JGraLab.vector();
				io.match("[");
				while (!io.isNextToken("]")) {
					java.lang.String $_lsElement;
					$_lsElement = io.matchUtfString();
					$_ls = $_ls.plus($_lsElement);
				}
				io.match("]");
				_ls = $_ls;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match(); 
				_ls = null;
			} else {
				_ls = null;
			}
			set_ls(_ls);
			return;
		}
		if (attributeName.equals("s")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_s = io.matchUtfString();
			set_s(_s);
			return;
		}
		throw new NoSuchAttributeException("Node doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeBoolean(_b);
		if (_color != null) {
			io.writeIdentifier(_color.toString());
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		io.writeDouble(_d);
		io.writeInteger(_i);
		io.writeLong(_l);
		if (_ld != null) {
			io.writeSpace();
			io.write("[");
			io.noSpace();
			for (double _ldElement : _ld) {
				io.writeDouble(_ldElement);
			}
			io.write("]");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_li != null) {
			io.writeSpace();
			io.write("[");
			io.noSpace();
			for (int _liElement : _li) {
				io.writeInteger(_liElement);
			}
			io.write("]");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_ll != null) {
			io.writeSpace();
			io.write("[");
			io.noSpace();
			for (long _llElement : _ll) {
				io.writeLong(_llElement);
			}
			io.write("]");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_ls != null) {
			io.writeSpace();
			io.write("[");
			io.noSpace();
			for (java.lang.String _lsElement : _ls) {
				io.writeUtfString(_lsElement);
			}
			io.write("]");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		io.writeUtfString(_s);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("b")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeBoolean(_b);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("color")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_color != null) {
				io.writeIdentifier(_color.toString());
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("d")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeDouble(_d);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("i")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeInteger(_i);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("l")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeLong(_l);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("ld")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_ld != null) {
				io.writeSpace();
				io.write("[");
				io.noSpace();
				for (double _ldElement : _ld) {
					io.writeDouble(_ldElement);
				}
				io.write("]");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("li")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_li != null) {
				io.writeSpace();
				io.write("[");
				io.noSpace();
				for (int _liElement : _li) {
					io.writeInteger(_liElement);
				}
				io.write("]");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("ll")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_ll != null) {
				io.writeSpace();
				io.write("[");
				io.noSpace();
				for (long _llElement : _ll) {
					io.writeLong(_llElement);
				}
				io.write("]");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("ls")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_ls != null) {
				io.writeSpace();
				io.write("[");
				io.noSpace();
				for (java.lang.String _lsElement : _ls) {
					io.writeUtfString(_lsElement);
				}
				io.write("]");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("s")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_s);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("Node doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.jniclient.Node getNextNode() {
		return (de.uni_koblenz.jgralabtest.schemas.jniclient.Node)getNextVertex(de.uni_koblenz.jgralabtest.schemas.jniclient.Node.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.jniclient.Link getFirstLinkIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.jniclient.Link)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.jniclient.Link.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.jniclient.Link getFirstLinkIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.jniclient.Link)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.jniclient.Link.class, orientation);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.jniclient.Link> getLinkIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.jniclient.Link>(this, de.uni_koblenz.jgralabtest.schemas.jniclient.Link.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.jniclient.Link> getLinkIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.jniclient.Link>(this, de.uni_koblenz.jgralabtest.schemas.jniclient.Link.class, direction);
	}
}
