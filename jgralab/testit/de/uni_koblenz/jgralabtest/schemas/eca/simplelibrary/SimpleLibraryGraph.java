/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary;

public interface SimpleLibraryGraph extends de.uni_koblenz.jgralab.Graph {

	public static final de.uni_koblenz.jgralab.schema.GraphClass GC = de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.SimpleLibrarySchema.instance().gc_SimpleLibraryGraph;

	public java.lang.String get_version();

	public void set_version(java.lang.String _version);

	// ------------------------ Code for Book ------------------------

	/**
	 * @return the first Book vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book getFirstBook();

	/**
	 * Creates a new Book vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book createBook();

	// ------------------------ Code for HasMedia ------------------------

	/**
	 * @return the first HasMedia edge in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia getFirstHasMedia();

	/**
	 * Creates a new HasMedia edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia createHasMedia(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library alpha, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium omega);

	// ------------------------ Code for Library ------------------------

	/**
	 * @return the first Library vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library getFirstLibrary();

	/**
	 * Creates a new Library vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library createLibrary();

	// ------------------------ Code for Loans ------------------------

	/**
	 * @return the first Loans edge in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans getFirstLoans();

	/**
	 * Creates a new Loans edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans createLoans(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User alpha, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium omega);

	// ------------------------ Code for Magazin ------------------------

	/**
	 * @return the first Magazin vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin getFirstMagazin();

	/**
	 * Creates a new Magazin vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin createMagazin();

	// ------------------------ Code for Medium ------------------------

	/**
	 * @return the first Medium vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium getFirstMedium();

	// ------------------------ Code for NewMedia ------------------------

	/**
	 * @return the first NewMedia vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia getFirstNewMedia();

	/**
	 * Creates a new NewMedia vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia createNewMedia();

	// ------------------------ Code for User ------------------------

	/**
	 * @return the first User vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User getFirstUser();

	/**
	 * Creates a new User vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User createUser();

	/**
	 * @return an Iterable for all edges of this graph that are of type HasMedia or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia> getHasMediaEdges();
	

	/**
	 * @return an Iterable for all edges of this graph that are of type Loans or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans> getLoansEdges();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Book or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book> getBookVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Magazin or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin> getMagazinVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Library or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library> getLibraryVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type User or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User> getUserVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type NewMedia or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia> getNewMediaVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Medium or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium> getMediumVertices();
	
}
