/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.impl.std;

import de.uni_koblenz.jgralab.impl.EdgeIterable;
import de.uni_koblenz.jgralab.impl.VertexIterable;

import de.uni_koblenz.jgralab.impl.std.GraphImpl;

import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;
import de.uni_koblenz.jgralab.Vertex;
import de.uni_koblenz.jgralab.greql2.evaluator.GreqlEvaluator;

import java.io.IOException;

import org.pcollections.POrderedSet;

public class SimpleLibraryGraphImpl extends GraphImpl implements de.uni_koblenz.jgralab.Graph, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.SimpleLibraryGraph {

	protected java.lang.String _version;

	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public SimpleLibraryGraphImpl() {
		this(null);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public SimpleLibraryGraphImpl(int vMax, int eMax) {
		this(null, vMax, eMax);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public SimpleLibraryGraphImpl(java.lang.String id, int vMax, int eMax) {
		super(id, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.SimpleLibraryGraph.GC, vMax, eMax);
		initializeAttributesWithDefaultValues();
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public SimpleLibraryGraphImpl(java.lang.String id) {
		super(id, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.SimpleLibraryGraph.GC);
		initializeAttributesWithDefaultValues();
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.GraphClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.SimpleLibraryGraph.GC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Graph> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.SimpleLibraryGraph.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("version")) return (T) get_version();
		throw new NoSuchAttributeException("SimpleLibraryGraph doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("version")) {
			set_version((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("SimpleLibraryGraph doesn't contain an attribute " + attributeName);
	}

	public java.lang.String get_version() {
		return _version;
	}

	public void set_version(java.lang.String _version) {
		ecaAttributeChanging("version", this._version, _version);
		Object oldValue = this._version;
		this._version = _version;
		graphModified();
	ecaAttributeChanged("version", oldValue, _version);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_version = io.matchUtfString();
		set_version(_version);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("version")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_version = io.matchUtfString();
			set_version(_version);
			return;
		}
		throw new NoSuchAttributeException("SimpleLibraryGraph doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeUtfString(_version);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("version")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_version);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("SimpleLibraryGraph doesn't contain an attribute " + attributeName);
	}
	
	protected GreqlEvaluator greqlEvaluator;

	@Override
	public synchronized <T extends Vertex> POrderedSet<T> reachableVertices(Vertex startVertex, String pathDescription, Class<T> vertexType) {
		if (greqlEvaluator == null) {
			greqlEvaluator = new GreqlEvaluator((String) null, this, null);
		}
		greqlEvaluator.setVariable("v", startVertex);
		greqlEvaluator.setQuery("using v: v " + pathDescription);
		greqlEvaluator.startEvaluation();
		return greqlEvaluator.getResultSet();
	}

	// ------------------------ Code for Book ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book getFirstBook() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book createBook() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book createBook(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book.VC, id, this);
	}

	// ------------------------ Code for HasMedia ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia getFirstHasMedia() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia createHasMedia(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library alpha, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia> createEdge(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia createHasMedia(int id, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library alpha, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia> createEdge(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia.EC, id, this, alpha, omega);
	}

	// ------------------------ Code for Library ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library getFirstLibrary() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library createLibrary() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library createLibrary(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library.VC, id, this);
	}

	// ------------------------ Code for Loans ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans getFirstLoans() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans createLoans(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User alpha, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans> createEdge(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans createLoans(int id, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User alpha, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans> createEdge(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.EC, id, this, alpha, omega);
	}

	// ------------------------ Code for Magazin ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin getFirstMagazin() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin createMagazin() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin createMagazin(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin.VC, id, this);
	}

	// ------------------------ Code for Medium ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium getFirstMedium() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium.VC);
	}

	// ------------------------ Code for NewMedia ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia getFirstNewMedia() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia createNewMedia() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia createNewMedia(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia.VC, id, this);
	}

	// ------------------------ Code for User ------------------------

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User getFirstUser() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User createUser() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User createUser(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User> createVertex(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User.VC, id, this);
	}

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia> getHasMediaEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.HasMedia.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans> getLoansEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book> getBookVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Book.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin> getMagazinVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Magazin.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library> getLibraryVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Library.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User> getUserVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia> getNewMediaVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.NewMedia.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium> getMediumVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium>(this, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium.class);
	}
	
}
