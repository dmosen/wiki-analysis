/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.impl.std;

import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;
import de.uni_koblenz.jgralab.Vertex;

import de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.impl.std.ReversedLoansImpl;

import de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Medium;
import de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.User;

import java.io.IOException;
/**
 * FromVertexClass: User
 * FromRoleName : user
 * ToVertexClass: Medium
 * ToRoleName : item
 */

public class LoansImpl extends EdgeImpl implements de.uni_koblenz.jgralab.Edge, de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans {

	protected de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Date _date;

	public LoansImpl(int id, de.uni_koblenz.jgralab.Graph g, Vertex alpha, Vertex omega) {
		super(id, g, alpha, omega);
		((de.uni_koblenz.jgralab.impl.InternalGraph) graph).addEdge(this, alpha, omega);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.EC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Edge> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("date")) return (T) get_date();
		throw new NoSuchAttributeException("Loans doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("date")) {
			set_date((de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Date) data);
			return;
		}
		throw new NoSuchAttributeException("Loans doesn't contain an attribute " + attributeName);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Date get_date() {
		return _date;
	}

	public void set_date(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Date _date) {
		ecaAttributeChanging("date", this._date, _date);
		Object oldValue = this._date;
		this._date = _date;
		graphModified();
	ecaAttributeChanged("date", oldValue, _date);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		
		if (io.isNextToken("(")) {
			_date = new de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Date(io);
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match();
			_date = null;
		} else {
			throw new GraphIOException("This is no record!");
		}
		set_date(_date);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("date")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("(")) {
				_date = new de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Date(io);
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match();
				_date = null;
			} else {
				throw new GraphIOException("This is no record!");
			}
			set_date(_date);
			return;
		}
		throw new NoSuchAttributeException("Loans doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		if (_date != null) {
			_date.writeComponentValues(io);
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("date")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_date != null) {
				_date.writeComponentValues(io);
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("Loans doesn't contain an attribute " + attributeName);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans getNextLoansInGraph() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans)getNextEdge(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans getNextLoansIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans getNextLoansIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.eca.simplelibrary.Loans.class, orientation);
	}

	public de.uni_koblenz.jgralab.schema.AggregationKind getAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getAlphaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getOmegaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	protected de.uni_koblenz.jgralab.impl.ReversedEdgeBaseImpl createReversedEdge() {
		return new ReversedLoansImpl(this, graph);
	}
	public User getAlpha() {
		return (User) super.getAlpha();
	}
	public Medium getOmega() {
		return (Medium) super.getOmega();
	}
}
