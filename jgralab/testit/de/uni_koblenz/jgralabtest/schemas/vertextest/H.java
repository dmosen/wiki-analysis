/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.vertextest;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralabtest.schemas.vertextest.A;
import de.uni_koblenz.jgralabtest.schemas.vertextest.B;
/**
 * FromVertexClass: A
 * FromRoleName : sourceH
 * ToVertexClass: B
 * ToRoleName : w
 */

public interface H extends de.uni_koblenz.jgralabtest.schemas.vertextest.E {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralabtest.schemas.vertextest.VertexTestSchema.instance().ec_H;

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.vertextest.E edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.vertextest.E getNextEInGraph();

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.vertextest.H edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.vertextest.H getNextHInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.vertextest.E at the "this" vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.vertextest.E getNextEIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.vertextest.E at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.vertextest.E getNextEIncidence(EdgeDirection orientation);

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.vertextest.H at the "this" vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.vertextest.H getNextHIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.vertextest.H at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.vertextest.H getNextHIncidence(EdgeDirection orientation);
	public A getAlpha();
	public B getOmega();
}
