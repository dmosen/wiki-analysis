/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.commenttest;

public interface CommentTestGraph extends de.uni_koblenz.jgralab.Graph {

	public static final de.uni_koblenz.jgralab.schema.GraphClass GC = de.uni_koblenz.jgralabtest.schemas.commenttest.CommentTestSchema.instance().gc_CommentTestGraph;

	// ------------------------ Code for pa.E ------------------------

	/**
	 * @return the first E edge in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.commenttest.pa.E getFirstE();

	/**
	 * Creates a new E edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.jgralabtest.schemas.commenttest.pa.E createE(de.uni_koblenz.jgralabtest.schemas.commenttest.pa.V alpha, de.uni_koblenz.jgralabtest.schemas.commenttest.pa.V omega);

	// ------------------------ Code for pa.V ------------------------

	/**
	 * @return the first V vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.commenttest.pa.V getFirstV();

	/**
	 * Creates a new V vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.commenttest.pa.V createV();

	// ------------------------ Code for pa.pc.W ------------------------

	/**
	 * @return the first W vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.commenttest.pa.pc.W getFirstW();

	/**
	 * Creates a new W vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.commenttest.pa.pc.W createW();

	/**
	 * @return an Iterable for all edges of this graph that are of type pa.E or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.commenttest.pa.E> getEEdges();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type pa.pc.W or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.commenttest.pa.pc.W> getWVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type pa.V or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.commenttest.pa.V> getVVertices();
	
}
