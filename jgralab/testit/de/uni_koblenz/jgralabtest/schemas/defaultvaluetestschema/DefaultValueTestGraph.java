/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema;

public interface DefaultValueTestGraph extends de.uni_koblenz.jgralab.Graph {

	public static final de.uni_koblenz.jgralab.schema.GraphClass GC = de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.DefaultValueTestSchema.instance().gc_DefaultValueTestGraph;

	public boolean is_boolGraph();

	public void set_boolGraph(boolean _boolGraph);

	public org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> get_complexListGraph();

	public void set_complexListGraph(org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> _complexListGraph);

	public org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> get_complexMapGraph();

	public void set_complexMapGraph(org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> _complexMapGraph);

	public org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> get_complexSetGraph();

	public void set_complexSetGraph(org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> _complexSetGraph);

	public double get_doubleGraph();

	public void set_doubleGraph(double _doubleGraph);

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain get_enumGraph();

	public void set_enumGraph(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain _enumGraph);

	public int get_intGraph();

	public void set_intGraph(int _intGraph);

	public org.pcollections.PVector<java.lang.Boolean> get_listGraph();

	public void set_listGraph(org.pcollections.PVector<java.lang.Boolean> _listGraph);

	public long get_longGraph();

	public void set_longGraph(long _longGraph);

	public org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> get_mapGraph();

	public void set_mapGraph(org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> _mapGraph);

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain get_recordGraph();

	public void set_recordGraph(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain _recordGraph);

	public org.pcollections.PSet<java.lang.Boolean> get_setGraph();

	public void set_setGraph(org.pcollections.PSet<java.lang.Boolean> _setGraph);

	public java.lang.String get_stringGraph();

	public void set_stringGraph(java.lang.String _stringGraph);

	// ------------------------ Code for TestEdge ------------------------

	/**
	 * @return the first TestEdge edge in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge getFirstTestEdge();

	/**
	 * Creates a new TestEdge edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge createTestEdge(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestVertex alpha, de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestVertex omega);

	// ------------------------ Code for TestSubVertex ------------------------

	/**
	 * @return the first TestSubVertex vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestSubVertex getFirstTestSubVertex();

	/**
	 * Creates a new TestSubVertex vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestSubVertex createTestSubVertex();

	// ------------------------ Code for TestVertex ------------------------

	/**
	 * @return the first TestVertex vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestVertex getFirstTestVertex();

	/**
	 * Creates a new TestVertex vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestVertex createTestVertex();

	/**
	 * @return an Iterable for all edges of this graph that are of type TestEdge or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge> getTestEdgeEdges();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type TestVertex or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestVertex> getTestVertexVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type TestSubVertex or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestSubVertex> getTestSubVertexVertices();
	
}
