/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.impl.std;

import de.uni_koblenz.jgralab.impl.std.ReversedEdgeImpl;
import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.Graph;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestVertex;

import java.io.IOException;

public class ReversedTestEdgeImpl extends ReversedEdgeImpl implements de.uni_koblenz.jgralab.Edge, de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge {

	ReversedTestEdgeImpl(EdgeImpl e, Graph g) {
		super(e, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return getNormalEdge().getAttributedElementClass();
	}

	public boolean is_boolEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).is_boolEdge();
	}

	public void set_boolEdge(boolean _boolEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_boolEdge(_boolEdge);
	}

	public org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> get_complexListEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_complexListEdge();
	}

	public void set_complexListEdge(org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> _complexListEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_complexListEdge(_complexListEdge);
	}

	public org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> get_complexMapEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_complexMapEdge();
	}

	public void set_complexMapEdge(org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> _complexMapEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_complexMapEdge(_complexMapEdge);
	}

	public org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> get_complexSetEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_complexSetEdge();
	}

	public void set_complexSetEdge(org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> _complexSetEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_complexSetEdge(_complexSetEdge);
	}

	public double get_doubleEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_doubleEdge();
	}

	public void set_doubleEdge(double _doubleEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_doubleEdge(_doubleEdge);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain get_enumEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_enumEdge();
	}

	public void set_enumEdge(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain _enumEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_enumEdge(_enumEdge);
	}

	public int get_intEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_intEdge();
	}

	public void set_intEdge(int _intEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_intEdge(_intEdge);
	}

	public org.pcollections.PVector<java.lang.Boolean> get_listEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_listEdge();
	}

	public void set_listEdge(org.pcollections.PVector<java.lang.Boolean> _listEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_listEdge(_listEdge);
	}

	public long get_longEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_longEdge();
	}

	public void set_longEdge(long _longEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_longEdge(_longEdge);
	}

	public org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> get_mapEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_mapEdge();
	}

	public void set_mapEdge(org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> _mapEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_mapEdge(_mapEdge);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain get_recordEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_recordEdge();
	}

	public void set_recordEdge(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain _recordEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_recordEdge(_recordEdge);
	}

	public org.pcollections.PSet<java.lang.Boolean> get_setEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_setEdge();
	}

	public void set_setEdge(org.pcollections.PSet<java.lang.Boolean> _setEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_setEdge(_setEdge);
	}

	public java.lang.String get_stringEdge() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).get_stringEdge();
	}

	public void set_stringEdge(java.lang.String _stringEdge) {
		((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).set_stringEdge(_stringEdge);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValues for reversed Edges.");
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValuesFromString for reversed Edges.");
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		throw new GraphIOException("Can not call writeAttributeValues for reversed Edges.");
	}

	public String writeAttributeValueToString(String _attributeName) throws IOException, GraphIOException {
		throw new GraphIOException("Can not call writeAttributeValueToString for reversed Edges.");
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge getNextTestEdgeInGraph() {
		return ((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)normalEdge).getNextTestEdgeInGraph();
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge getNextTestEdgeIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge getNextTestEdgeIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge.class, orientation);
	}
	public TestVertex getAlpha() {
		return (TestVertex) super.getAlpha();
	}
	public TestVertex getOmega() {
		return (TestVertex) super.getOmega();
	}
}
