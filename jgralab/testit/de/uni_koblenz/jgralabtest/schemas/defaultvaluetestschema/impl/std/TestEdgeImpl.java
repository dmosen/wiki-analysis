/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.impl.std;

import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;
import de.uni_koblenz.jgralab.Vertex;

import de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.impl.std.ReversedTestEdgeImpl;

import de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestVertex;

import java.io.IOException;
/**
 * FromVertexClass: TestVertex
 * FromRoleName : start
 * ToVertexClass: TestVertex
 * ToRoleName : end
 */

public class TestEdgeImpl extends EdgeImpl implements de.uni_koblenz.jgralab.Edge, de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge {

	protected boolean _boolEdge;

	protected org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> _complexListEdge;

	protected org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> _complexMapEdge;

	protected org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> _complexSetEdge;

	protected double _doubleEdge;

	protected de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain _enumEdge;

	protected int _intEdge;

	protected org.pcollections.PVector<java.lang.Boolean> _listEdge;

	protected long _longEdge;

	protected org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> _mapEdge;

	protected de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain _recordEdge;

	protected org.pcollections.PSet<java.lang.Boolean> _setEdge;

	protected java.lang.String _stringEdge;

	public TestEdgeImpl(int id, de.uni_koblenz.jgralab.Graph g, Vertex alpha, Vertex omega) {
		super(id, g, alpha, omega);
		initializeAttributesWithDefaultValues();
		((de.uni_koblenz.jgralab.impl.InternalGraph) graph).addEdge(this, alpha, omega);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge.EC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Edge> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("boolEdge")) return (T) (java.lang.Boolean) is_boolEdge();
		if (attributeName.equals("complexListEdge")) return (T) get_complexListEdge();
		if (attributeName.equals("complexMapEdge")) return (T) get_complexMapEdge();
		if (attributeName.equals("complexSetEdge")) return (T) get_complexSetEdge();
		if (attributeName.equals("doubleEdge")) return (T) (java.lang.Double) get_doubleEdge();
		if (attributeName.equals("enumEdge")) return (T) get_enumEdge();
		if (attributeName.equals("intEdge")) return (T) (java.lang.Integer) get_intEdge();
		if (attributeName.equals("listEdge")) return (T) get_listEdge();
		if (attributeName.equals("longEdge")) return (T) (java.lang.Long) get_longEdge();
		if (attributeName.equals("mapEdge")) return (T) get_mapEdge();
		if (attributeName.equals("recordEdge")) return (T) get_recordEdge();
		if (attributeName.equals("setEdge")) return (T) get_setEdge();
		if (attributeName.equals("stringEdge")) return (T) get_stringEdge();
		throw new NoSuchAttributeException("TestEdge doesn't contain an attribute " + attributeName);
	}

	@SuppressWarnings("unchecked")
	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("boolEdge")) {
			set_boolEdge((java.lang.Boolean) data);
			return;
		}
		if (attributeName.equals("complexListEdge")) {
			set_complexListEdge((org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>>) data);
			return;
		}
		if (attributeName.equals("complexMapEdge")) {
			set_complexMapEdge((org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>>) data);
			return;
		}
		if (attributeName.equals("complexSetEdge")) {
			set_complexSetEdge((org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>>) data);
			return;
		}
		if (attributeName.equals("doubleEdge")) {
			set_doubleEdge((java.lang.Double) data);
			return;
		}
		if (attributeName.equals("enumEdge")) {
			if (data instanceof String) {
				set_enumEdge(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain.valueOfPermitNull((String) data));
			} else {
				set_enumEdge((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain) data);
			}
			return;
		}
		if (attributeName.equals("intEdge")) {
			set_intEdge((java.lang.Integer) data);
			return;
		}
		if (attributeName.equals("listEdge")) {
			set_listEdge((org.pcollections.PVector<java.lang.Boolean>) data);
			return;
		}
		if (attributeName.equals("longEdge")) {
			set_longEdge((java.lang.Long) data);
			return;
		}
		if (attributeName.equals("mapEdge")) {
			set_mapEdge((org.pcollections.PMap<java.lang.Integer, java.lang.Boolean>) data);
			return;
		}
		if (attributeName.equals("recordEdge")) {
			set_recordEdge((de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain) data);
			return;
		}
		if (attributeName.equals("setEdge")) {
			set_setEdge((org.pcollections.PSet<java.lang.Boolean>) data);
			return;
		}
		if (attributeName.equals("stringEdge")) {
			set_stringEdge((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("TestEdge doesn't contain an attribute " + attributeName);
	}

	public boolean is_boolEdge() {
		return _boolEdge;
	}

	public void set_boolEdge(boolean _boolEdge) {
		ecaAttributeChanging("boolEdge", this._boolEdge, _boolEdge);
		Object oldValue = this._boolEdge;
		this._boolEdge = _boolEdge;
		graphModified();
	ecaAttributeChanged("boolEdge", oldValue, _boolEdge);
	}

	public org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> get_complexListEdge() {
		return _complexListEdge;
	}

	public void set_complexListEdge(org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> _complexListEdge) {
		ecaAttributeChanging("complexListEdge", this._complexListEdge, _complexListEdge);
		Object oldValue = this._complexListEdge;
		this._complexListEdge = _complexListEdge;
		graphModified();
	ecaAttributeChanged("complexListEdge", oldValue, _complexListEdge);
	}

	public org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> get_complexMapEdge() {
		return _complexMapEdge;
	}

	public void set_complexMapEdge(org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> _complexMapEdge) {
		ecaAttributeChanging("complexMapEdge", this._complexMapEdge, _complexMapEdge);
		Object oldValue = this._complexMapEdge;
		this._complexMapEdge = _complexMapEdge;
		graphModified();
	ecaAttributeChanged("complexMapEdge", oldValue, _complexMapEdge);
	}

	public org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> get_complexSetEdge() {
		return _complexSetEdge;
	}

	public void set_complexSetEdge(org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> _complexSetEdge) {
		ecaAttributeChanging("complexSetEdge", this._complexSetEdge, _complexSetEdge);
		Object oldValue = this._complexSetEdge;
		this._complexSetEdge = _complexSetEdge;
		graphModified();
	ecaAttributeChanged("complexSetEdge", oldValue, _complexSetEdge);
	}

	public double get_doubleEdge() {
		return _doubleEdge;
	}

	public void set_doubleEdge(double _doubleEdge) {
		ecaAttributeChanging("doubleEdge", this._doubleEdge, _doubleEdge);
		Object oldValue = this._doubleEdge;
		this._doubleEdge = _doubleEdge;
		graphModified();
	ecaAttributeChanged("doubleEdge", oldValue, _doubleEdge);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain get_enumEdge() {
		return _enumEdge;
	}

	public void set_enumEdge(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain _enumEdge) {
		ecaAttributeChanging("enumEdge", this._enumEdge, _enumEdge);
		Object oldValue = this._enumEdge;
		this._enumEdge = _enumEdge;
		graphModified();
	ecaAttributeChanged("enumEdge", oldValue, _enumEdge);
	}

	public int get_intEdge() {
		return _intEdge;
	}

	public void set_intEdge(int _intEdge) {
		ecaAttributeChanging("intEdge", this._intEdge, _intEdge);
		Object oldValue = this._intEdge;
		this._intEdge = _intEdge;
		graphModified();
	ecaAttributeChanged("intEdge", oldValue, _intEdge);
	}

	public org.pcollections.PVector<java.lang.Boolean> get_listEdge() {
		return _listEdge;
	}

	public void set_listEdge(org.pcollections.PVector<java.lang.Boolean> _listEdge) {
		ecaAttributeChanging("listEdge", this._listEdge, _listEdge);
		Object oldValue = this._listEdge;
		this._listEdge = _listEdge;
		graphModified();
	ecaAttributeChanged("listEdge", oldValue, _listEdge);
	}

	public long get_longEdge() {
		return _longEdge;
	}

	public void set_longEdge(long _longEdge) {
		ecaAttributeChanging("longEdge", this._longEdge, _longEdge);
		Object oldValue = this._longEdge;
		this._longEdge = _longEdge;
		graphModified();
	ecaAttributeChanged("longEdge", oldValue, _longEdge);
	}

	public org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> get_mapEdge() {
		return _mapEdge;
	}

	public void set_mapEdge(org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> _mapEdge) {
		ecaAttributeChanging("mapEdge", this._mapEdge, _mapEdge);
		Object oldValue = this._mapEdge;
		this._mapEdge = _mapEdge;
		graphModified();
	ecaAttributeChanged("mapEdge", oldValue, _mapEdge);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain get_recordEdge() {
		return _recordEdge;
	}

	public void set_recordEdge(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain _recordEdge) {
		ecaAttributeChanging("recordEdge", this._recordEdge, _recordEdge);
		Object oldValue = this._recordEdge;
		this._recordEdge = _recordEdge;
		graphModified();
	ecaAttributeChanged("recordEdge", oldValue, _recordEdge);
	}

	public org.pcollections.PSet<java.lang.Boolean> get_setEdge() {
		return _setEdge;
	}

	public void set_setEdge(org.pcollections.PSet<java.lang.Boolean> _setEdge) {
		ecaAttributeChanging("setEdge", this._setEdge, _setEdge);
		Object oldValue = this._setEdge;
		this._setEdge = _setEdge;
		graphModified();
	ecaAttributeChanged("setEdge", oldValue, _setEdge);
	}

	public java.lang.String get_stringEdge() {
		return _stringEdge;
	}

	public void set_stringEdge(java.lang.String _stringEdge) {
		ecaAttributeChanging("stringEdge", this._stringEdge, _stringEdge);
		Object oldValue = this._stringEdge;
		this._stringEdge = _stringEdge;
		graphModified();
	ecaAttributeChanged("stringEdge", oldValue, _stringEdge);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_boolEdge = io.matchBoolean();
		set_boolEdge(_boolEdge);
		
		if (io.isNextToken("[")) {
			org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> $_complexListEdge = de.uni_koblenz.jgralab.JGraLab.vector();
			io.match("[");
			while (!io.isNextToken("]")) {
				org.pcollections.PVector<java.lang.Boolean> $_complexListEdgeElement = null;
				
				if (io.isNextToken("[")) {
					org.pcollections.PVector<java.lang.Boolean> $$_complexListEdgeElement = de.uni_koblenz.jgralab.JGraLab.vector();
					io.match("[");
					while (!io.isNextToken("]")) {
						boolean $$_complexListEdgeElementElement;
						$$_complexListEdgeElementElement = io.matchBoolean();
						$$_complexListEdgeElement = $$_complexListEdgeElement.plus($$_complexListEdgeElementElement);
					}
					io.match("]");
					$_complexListEdgeElement = $$_complexListEdgeElement;
				} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
					io.match(); 
					$_complexListEdgeElement = null;
				} else {
					$_complexListEdgeElement = null;
				}
				$_complexListEdge = $_complexListEdge.plus($_complexListEdgeElement);
			}
			io.match("]");
			_complexListEdge = $_complexListEdge;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match(); 
			_complexListEdge = null;
		} else {
			_complexListEdge = null;
		}
		set_complexListEdge(_complexListEdge);
		
		if (io.isNextToken("{")) {
			org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> $_complexMapEdge = de.uni_koblenz.jgralab.JGraLab.map();
			io.match("{");
			while (!io.isNextToken("}")) {
				org.pcollections.PVector<java.lang.Boolean> _complexMapEdgeKey = null;
					org.pcollections.PSet<java.lang.Boolean> _complexMapEdgeValue = null;
				
				if (io.isNextToken("[")) {
					org.pcollections.PVector<java.lang.Boolean> $_complexMapEdgeKey = de.uni_koblenz.jgralab.JGraLab.vector();
					io.match("[");
					while (!io.isNextToken("]")) {
						boolean $_complexMapEdgeKeyElement;
						$_complexMapEdgeKeyElement = io.matchBoolean();
						$_complexMapEdgeKey = $_complexMapEdgeKey.plus($_complexMapEdgeKeyElement);
					}
					io.match("]");
					_complexMapEdgeKey = $_complexMapEdgeKey;
				} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
					io.match(); 
					_complexMapEdgeKey = null;
				} else {
					_complexMapEdgeKey = null;
				}
				io.match("-");
				
				if (io.isNextToken("{")) {
					org.pcollections.PSet<java.lang.Boolean> $_complexMapEdgeValue = de.uni_koblenz.jgralab.JGraLab.set();
					io.match("{");
					while (!io.isNextToken("}")) {
						boolean $_complexMapEdgeValueElement;
						$_complexMapEdgeValueElement = io.matchBoolean();
						$_complexMapEdgeValue = $_complexMapEdgeValue.plus($_complexMapEdgeValueElement);
					}
					io.match("}");
					_complexMapEdgeValue = $_complexMapEdgeValue;
				} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
					io.match();
					_complexMapEdgeValue = null;
				} else {
					_complexMapEdgeValue = null;
				}
				$_complexMapEdge = $_complexMapEdge.plus(_complexMapEdgeKey, _complexMapEdgeValue);
			}
			io.match("}");
			_complexMapEdge = $_complexMapEdge;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match();
			_complexMapEdge = null;
		} else {
			_complexMapEdge = null;
		}
		set_complexMapEdge(_complexMapEdge);
		
		if (io.isNextToken("{")) {
			org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> $_complexSetEdge = de.uni_koblenz.jgralab.JGraLab.set();
			io.match("{");
			while (!io.isNextToken("}")) {
				org.pcollections.PSet<java.lang.Boolean> $_complexSetEdgeElement = null;
				
				if (io.isNextToken("{")) {
					org.pcollections.PSet<java.lang.Boolean> $$_complexSetEdgeElement = de.uni_koblenz.jgralab.JGraLab.set();
					io.match("{");
					while (!io.isNextToken("}")) {
						boolean $$_complexSetEdgeElementElement;
						$$_complexSetEdgeElementElement = io.matchBoolean();
						$$_complexSetEdgeElement = $$_complexSetEdgeElement.plus($$_complexSetEdgeElementElement);
					}
					io.match("}");
					$_complexSetEdgeElement = $$_complexSetEdgeElement;
				} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
					io.match();
					$_complexSetEdgeElement = null;
				} else {
					$_complexSetEdgeElement = null;
				}
				$_complexSetEdge = $_complexSetEdge.plus($_complexSetEdgeElement);
			}
			io.match("}");
			_complexSetEdge = $_complexSetEdge;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match();
			_complexSetEdge = null;
		} else {
			_complexSetEdge = null;
		}
		set_complexSetEdge(_complexSetEdge);
		_doubleEdge = io.matchDouble();
		set_doubleEdge(_doubleEdge);
		_enumEdge = de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain.valueOfPermitNull(io.matchEnumConstant());
		set_enumEdge(_enumEdge);
		_intEdge = io.matchInteger();
		set_intEdge(_intEdge);
		
		if (io.isNextToken("[")) {
			org.pcollections.PVector<java.lang.Boolean> $_listEdge = de.uni_koblenz.jgralab.JGraLab.vector();
			io.match("[");
			while (!io.isNextToken("]")) {
				boolean $_listEdgeElement;
				$_listEdgeElement = io.matchBoolean();
				$_listEdge = $_listEdge.plus($_listEdgeElement);
			}
			io.match("]");
			_listEdge = $_listEdge;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match(); 
			_listEdge = null;
		} else {
			_listEdge = null;
		}
		set_listEdge(_listEdge);
		_longEdge = io.matchLong();
		set_longEdge(_longEdge);
		
		if (io.isNextToken("{")) {
			org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> $_mapEdge = de.uni_koblenz.jgralab.JGraLab.map();
			io.match("{");
			while (!io.isNextToken("}")) {
				int _mapEdgeKey;
					boolean _mapEdgeValue;
				_mapEdgeKey = io.matchInteger();
				io.match("-");
				_mapEdgeValue = io.matchBoolean();
				$_mapEdge = $_mapEdge.plus(_mapEdgeKey, _mapEdgeValue);
			}
			io.match("}");
			_mapEdge = $_mapEdge;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match();
			_mapEdge = null;
		} else {
			_mapEdge = null;
		}
		set_mapEdge(_mapEdge);
		
		if (io.isNextToken("(")) {
			_recordEdge = new de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain(io);
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match();
			_recordEdge = null;
		} else {
			throw new GraphIOException("This is no record!");
		}
		set_recordEdge(_recordEdge);
		
		if (io.isNextToken("{")) {
			org.pcollections.PSet<java.lang.Boolean> $_setEdge = de.uni_koblenz.jgralab.JGraLab.set();
			io.match("{");
			while (!io.isNextToken("}")) {
				boolean $_setEdgeElement;
				$_setEdgeElement = io.matchBoolean();
				$_setEdge = $_setEdge.plus($_setEdgeElement);
			}
			io.match("}");
			_setEdge = $_setEdge;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match();
			_setEdge = null;
		} else {
			_setEdge = null;
		}
		set_setEdge(_setEdge);
		_stringEdge = io.matchUtfString();
		set_stringEdge(_stringEdge);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("boolEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_boolEdge = io.matchBoolean();
			set_boolEdge(_boolEdge);
			return;
		}
		if (attributeName.equals("complexListEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("[")) {
				org.pcollections.PVector<org.pcollections.PVector<java.lang.Boolean>> $_complexListEdge = de.uni_koblenz.jgralab.JGraLab.vector();
				io.match("[");
				while (!io.isNextToken("]")) {
					org.pcollections.PVector<java.lang.Boolean> $_complexListEdgeElement = null;
					
					if (io.isNextToken("[")) {
						org.pcollections.PVector<java.lang.Boolean> $$_complexListEdgeElement = de.uni_koblenz.jgralab.JGraLab.vector();
						io.match("[");
						while (!io.isNextToken("]")) {
							boolean $$_complexListEdgeElementElement;
							$$_complexListEdgeElementElement = io.matchBoolean();
							$$_complexListEdgeElement = $$_complexListEdgeElement.plus($$_complexListEdgeElementElement);
						}
						io.match("]");
						$_complexListEdgeElement = $$_complexListEdgeElement;
					} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
						io.match(); 
						$_complexListEdgeElement = null;
					} else {
						$_complexListEdgeElement = null;
					}
					$_complexListEdge = $_complexListEdge.plus($_complexListEdgeElement);
				}
				io.match("]");
				_complexListEdge = $_complexListEdge;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match(); 
				_complexListEdge = null;
			} else {
				_complexListEdge = null;
			}
			set_complexListEdge(_complexListEdge);
			return;
		}
		if (attributeName.equals("complexMapEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("{")) {
				org.pcollections.PMap<org.pcollections.PVector<java.lang.Boolean>, org.pcollections.PSet<java.lang.Boolean>> $_complexMapEdge = de.uni_koblenz.jgralab.JGraLab.map();
				io.match("{");
				while (!io.isNextToken("}")) {
					org.pcollections.PVector<java.lang.Boolean> _complexMapEdgeKey = null;
						org.pcollections.PSet<java.lang.Boolean> _complexMapEdgeValue = null;
					
					if (io.isNextToken("[")) {
						org.pcollections.PVector<java.lang.Boolean> $_complexMapEdgeKey = de.uni_koblenz.jgralab.JGraLab.vector();
						io.match("[");
						while (!io.isNextToken("]")) {
							boolean $_complexMapEdgeKeyElement;
							$_complexMapEdgeKeyElement = io.matchBoolean();
							$_complexMapEdgeKey = $_complexMapEdgeKey.plus($_complexMapEdgeKeyElement);
						}
						io.match("]");
						_complexMapEdgeKey = $_complexMapEdgeKey;
					} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
						io.match(); 
						_complexMapEdgeKey = null;
					} else {
						_complexMapEdgeKey = null;
					}
					io.match("-");
					
					if (io.isNextToken("{")) {
						org.pcollections.PSet<java.lang.Boolean> $_complexMapEdgeValue = de.uni_koblenz.jgralab.JGraLab.set();
						io.match("{");
						while (!io.isNextToken("}")) {
							boolean $_complexMapEdgeValueElement;
							$_complexMapEdgeValueElement = io.matchBoolean();
							$_complexMapEdgeValue = $_complexMapEdgeValue.plus($_complexMapEdgeValueElement);
						}
						io.match("}");
						_complexMapEdgeValue = $_complexMapEdgeValue;
					} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
						io.match();
						_complexMapEdgeValue = null;
					} else {
						_complexMapEdgeValue = null;
					}
					$_complexMapEdge = $_complexMapEdge.plus(_complexMapEdgeKey, _complexMapEdgeValue);
				}
				io.match("}");
				_complexMapEdge = $_complexMapEdge;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match();
				_complexMapEdge = null;
			} else {
				_complexMapEdge = null;
			}
			set_complexMapEdge(_complexMapEdge);
			return;
		}
		if (attributeName.equals("complexSetEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("{")) {
				org.pcollections.PSet<org.pcollections.PSet<java.lang.Boolean>> $_complexSetEdge = de.uni_koblenz.jgralab.JGraLab.set();
				io.match("{");
				while (!io.isNextToken("}")) {
					org.pcollections.PSet<java.lang.Boolean> $_complexSetEdgeElement = null;
					
					if (io.isNextToken("{")) {
						org.pcollections.PSet<java.lang.Boolean> $$_complexSetEdgeElement = de.uni_koblenz.jgralab.JGraLab.set();
						io.match("{");
						while (!io.isNextToken("}")) {
							boolean $$_complexSetEdgeElementElement;
							$$_complexSetEdgeElementElement = io.matchBoolean();
							$$_complexSetEdgeElement = $$_complexSetEdgeElement.plus($$_complexSetEdgeElementElement);
						}
						io.match("}");
						$_complexSetEdgeElement = $$_complexSetEdgeElement;
					} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
						io.match();
						$_complexSetEdgeElement = null;
					} else {
						$_complexSetEdgeElement = null;
					}
					$_complexSetEdge = $_complexSetEdge.plus($_complexSetEdgeElement);
				}
				io.match("}");
				_complexSetEdge = $_complexSetEdge;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match();
				_complexSetEdge = null;
			} else {
				_complexSetEdge = null;
			}
			set_complexSetEdge(_complexSetEdge);
			return;
		}
		if (attributeName.equals("doubleEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_doubleEdge = io.matchDouble();
			set_doubleEdge(_doubleEdge);
			return;
		}
		if (attributeName.equals("enumEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_enumEdge = de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEnumDomain.valueOfPermitNull(io.matchEnumConstant());
			set_enumEdge(_enumEdge);
			return;
		}
		if (attributeName.equals("intEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_intEdge = io.matchInteger();
			set_intEdge(_intEdge);
			return;
		}
		if (attributeName.equals("listEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("[")) {
				org.pcollections.PVector<java.lang.Boolean> $_listEdge = de.uni_koblenz.jgralab.JGraLab.vector();
				io.match("[");
				while (!io.isNextToken("]")) {
					boolean $_listEdgeElement;
					$_listEdgeElement = io.matchBoolean();
					$_listEdge = $_listEdge.plus($_listEdgeElement);
				}
				io.match("]");
				_listEdge = $_listEdge;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match(); 
				_listEdge = null;
			} else {
				_listEdge = null;
			}
			set_listEdge(_listEdge);
			return;
		}
		if (attributeName.equals("longEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_longEdge = io.matchLong();
			set_longEdge(_longEdge);
			return;
		}
		if (attributeName.equals("mapEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("{")) {
				org.pcollections.PMap<java.lang.Integer, java.lang.Boolean> $_mapEdge = de.uni_koblenz.jgralab.JGraLab.map();
				io.match("{");
				while (!io.isNextToken("}")) {
					int _mapEdgeKey;
						boolean _mapEdgeValue;
					_mapEdgeKey = io.matchInteger();
					io.match("-");
					_mapEdgeValue = io.matchBoolean();
					$_mapEdge = $_mapEdge.plus(_mapEdgeKey, _mapEdgeValue);
				}
				io.match("}");
				_mapEdge = $_mapEdge;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match();
				_mapEdge = null;
			} else {
				_mapEdge = null;
			}
			set_mapEdge(_mapEdge);
			return;
		}
		if (attributeName.equals("recordEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("(")) {
				_recordEdge = new de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestRecordDomain(io);
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match();
				_recordEdge = null;
			} else {
				throw new GraphIOException("This is no record!");
			}
			set_recordEdge(_recordEdge);
			return;
		}
		if (attributeName.equals("setEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			
			if (io.isNextToken("{")) {
				org.pcollections.PSet<java.lang.Boolean> $_setEdge = de.uni_koblenz.jgralab.JGraLab.set();
				io.match("{");
				while (!io.isNextToken("}")) {
					boolean $_setEdgeElement;
					$_setEdgeElement = io.matchBoolean();
					$_setEdge = $_setEdge.plus($_setEdgeElement);
				}
				io.match("}");
				_setEdge = $_setEdge;
			} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
				io.match();
				_setEdge = null;
			} else {
				_setEdge = null;
			}
			set_setEdge(_setEdge);
			return;
		}
		if (attributeName.equals("stringEdge")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_stringEdge = io.matchUtfString();
			set_stringEdge(_stringEdge);
			return;
		}
		throw new NoSuchAttributeException("TestEdge doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeBoolean(_boolEdge);
		if (_complexListEdge != null) {
			io.writeSpace();
			io.write("[");
			io.noSpace();
			for (org.pcollections.PVector<java.lang.Boolean> _complexListEdgeElement : _complexListEdge) {
				if (_complexListEdgeElement != null) {
					io.writeSpace();
					io.write("[");
					io.noSpace();
					for (boolean _complexListEdgeElementElement : _complexListEdgeElement) {
						io.writeBoolean(_complexListEdgeElementElement);
					}
					io.write("]");
					io.space();
				} else {
					io.writeIdentifier(GraphIO.NULL_LITERAL);
				}
			}
			io.write("]");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_complexMapEdge != null) {
			io.writeSpace();
			io.write("{");
			io.noSpace();
			for (org.pcollections.PVector<java.lang.Boolean> key: _complexMapEdge.keySet()) {
				org.pcollections.PSet<java.lang.Boolean> value = _complexMapEdge.get(key);
				if (key != null) {
					io.writeSpace();
					io.write("[");
					io.noSpace();
					for (boolean keyElement : key) {
						io.writeBoolean(keyElement);
					}
					io.write("]");
					io.space();
				} else {
					io.writeIdentifier(GraphIO.NULL_LITERAL);
				}
				io.write(" -");
				if (value != null) {
					io.writeSpace();
					io.write("{");
					io.noSpace();
					for (boolean valueElement : value) {
						io.writeBoolean(valueElement);
					}
					io.write("}");
					io.space();
				} else {
					io.writeIdentifier(GraphIO.NULL_LITERAL);
				}
			}
			io.write("}");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_complexSetEdge != null) {
			io.writeSpace();
			io.write("{");
			io.noSpace();
			for (org.pcollections.PSet<java.lang.Boolean> _complexSetEdgeElement : _complexSetEdge) {
				if (_complexSetEdgeElement != null) {
					io.writeSpace();
					io.write("{");
					io.noSpace();
					for (boolean _complexSetEdgeElementElement : _complexSetEdgeElement) {
						io.writeBoolean(_complexSetEdgeElementElement);
					}
					io.write("}");
					io.space();
				} else {
					io.writeIdentifier(GraphIO.NULL_LITERAL);
				}
			}
			io.write("}");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		io.writeDouble(_doubleEdge);
		if (_enumEdge != null) {
			io.writeIdentifier(_enumEdge.toString());
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		io.writeInteger(_intEdge);
		if (_listEdge != null) {
			io.writeSpace();
			io.write("[");
			io.noSpace();
			for (boolean _listEdgeElement : _listEdge) {
				io.writeBoolean(_listEdgeElement);
			}
			io.write("]");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		io.writeLong(_longEdge);
		if (_mapEdge != null) {
			io.writeSpace();
			io.write("{");
			io.noSpace();
			for (int key: _mapEdge.keySet()) {
				boolean value = _mapEdge.get(key);
				io.writeInteger(key);
				io.write(" -");
				io.writeBoolean(value);
			}
			io.write("}");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_recordEdge != null) {
			_recordEdge.writeComponentValues(io);
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_setEdge != null) {
			io.writeSpace();
			io.write("{");
			io.noSpace();
			for (boolean _setEdgeElement : _setEdge) {
				io.writeBoolean(_setEdgeElement);
			}
			io.write("}");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		io.writeUtfString(_stringEdge);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("boolEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeBoolean(_boolEdge);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("complexListEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_complexListEdge != null) {
				io.writeSpace();
				io.write("[");
				io.noSpace();
				for (org.pcollections.PVector<java.lang.Boolean> _complexListEdgeElement : _complexListEdge) {
					if (_complexListEdgeElement != null) {
						io.writeSpace();
						io.write("[");
						io.noSpace();
						for (boolean _complexListEdgeElementElement : _complexListEdgeElement) {
							io.writeBoolean(_complexListEdgeElementElement);
						}
						io.write("]");
						io.space();
					} else {
						io.writeIdentifier(GraphIO.NULL_LITERAL);
					}
				}
				io.write("]");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("complexMapEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_complexMapEdge != null) {
				io.writeSpace();
				io.write("{");
				io.noSpace();
				for (org.pcollections.PVector<java.lang.Boolean> key: _complexMapEdge.keySet()) {
					org.pcollections.PSet<java.lang.Boolean> value = _complexMapEdge.get(key);
					if (key != null) {
						io.writeSpace();
						io.write("[");
						io.noSpace();
						for (boolean keyElement : key) {
							io.writeBoolean(keyElement);
						}
						io.write("]");
						io.space();
					} else {
						io.writeIdentifier(GraphIO.NULL_LITERAL);
					}
					io.write(" -");
					if (value != null) {
						io.writeSpace();
						io.write("{");
						io.noSpace();
						for (boolean valueElement : value) {
							io.writeBoolean(valueElement);
						}
						io.write("}");
						io.space();
					} else {
						io.writeIdentifier(GraphIO.NULL_LITERAL);
					}
				}
				io.write("}");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("complexSetEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_complexSetEdge != null) {
				io.writeSpace();
				io.write("{");
				io.noSpace();
				for (org.pcollections.PSet<java.lang.Boolean> _complexSetEdgeElement : _complexSetEdge) {
					if (_complexSetEdgeElement != null) {
						io.writeSpace();
						io.write("{");
						io.noSpace();
						for (boolean _complexSetEdgeElementElement : _complexSetEdgeElement) {
							io.writeBoolean(_complexSetEdgeElementElement);
						}
						io.write("}");
						io.space();
					} else {
						io.writeIdentifier(GraphIO.NULL_LITERAL);
					}
				}
				io.write("}");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("doubleEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeDouble(_doubleEdge);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("enumEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_enumEdge != null) {
				io.writeIdentifier(_enumEdge.toString());
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("intEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeInteger(_intEdge);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("listEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_listEdge != null) {
				io.writeSpace();
				io.write("[");
				io.noSpace();
				for (boolean _listEdgeElement : _listEdge) {
					io.writeBoolean(_listEdgeElement);
				}
				io.write("]");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("longEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeLong(_longEdge);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("mapEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_mapEdge != null) {
				io.writeSpace();
				io.write("{");
				io.noSpace();
				for (int key: _mapEdge.keySet()) {
					boolean value = _mapEdge.get(key);
					io.writeInteger(key);
					io.write(" -");
					io.writeBoolean(value);
				}
				io.write("}");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("recordEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_recordEdge != null) {
				_recordEdge.writeComponentValues(io);
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("setEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_setEdge != null) {
				io.writeSpace();
				io.write("{");
				io.noSpace();
				for (boolean _setEdgeElement : _setEdge) {
					io.writeBoolean(_setEdgeElement);
				}
				io.write("}");
				io.space();
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		if (attributeName.equals("stringEdge")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_stringEdge);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("TestEdge doesn't contain an attribute " + attributeName);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge getNextTestEdgeInGraph() {
		return (de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)getNextEdge(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge getNextTestEdgeIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge getNextTestEdgeIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.defaultvaluetestschema.TestEdge.class, orientation);
	}

	public de.uni_koblenz.jgralab.schema.AggregationKind getAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getAlphaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getOmegaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	protected de.uni_koblenz.jgralab.impl.ReversedEdgeBaseImpl createReversedEdge() {
		return new ReversedTestEdgeImpl(this, graph);
	}
	public TestVertex getAlpha() {
		return (TestVertex) super.getAlpha();
	}
	public TestVertex getOmega() {
		return (TestVertex) super.getOmega();
	}
}
