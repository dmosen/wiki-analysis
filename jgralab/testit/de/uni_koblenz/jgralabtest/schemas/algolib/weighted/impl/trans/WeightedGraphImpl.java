/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.algolib.weighted.impl.trans;

import de.uni_koblenz.jgralab.impl.EdgeIterable;
import de.uni_koblenz.jgralab.impl.VertexIterable;

import de.uni_koblenz.jgralab.impl.trans.GraphImpl;

import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;
import de.uni_koblenz.jgralab.Vertex;
import de.uni_koblenz.jgralab.greql2.evaluator.GreqlEvaluator;

import java.io.IOException;

import org.pcollections.POrderedSet;

public class WeightedGraphImpl extends GraphImpl implements de.uni_koblenz.jgralab.Graph, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.WeightedGraph {

	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public WeightedGraphImpl() {
		this(null);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public WeightedGraphImpl(int vMax, int eMax) {
		this(null, vMax, eMax);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public WeightedGraphImpl(java.lang.String id, int vMax, int eMax) {
		super(id, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.WeightedGraph.GC, vMax, eMax);
		initializeAttributesWithDefaultValues();
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public WeightedGraphImpl(java.lang.String id) {
		super(id, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.WeightedGraph.GC);
		initializeAttributesWithDefaultValues();
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.GraphClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.algolib.weighted.WeightedGraph.GC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Graph> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.algolib.weighted.WeightedGraph.class;
	}

	public <T> T getAttribute(String attributeName) {
		throw new NoSuchAttributeException("WeightedGraph doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		throw new NoSuchAttributeException("WeightedGraph doesn't contain an attribute " + attributeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new NoSuchAttributeException("WeightedGraph doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		throw new NoSuchAttributeException("WeightedGraph doesn't contain an attribute " + attributeName);
	}
	public java.util.Set<de.uni_koblenz.jgralab.trans.VersionedDataObject<?>> attributes() {
		java.util.Set<de.uni_koblenz.jgralab.trans.VersionedDataObject<?>> attributes = new java.util.HashSet<de.uni_koblenz.jgralab.trans.VersionedDataObject<?>>();
		return attributes;
	}
	
	protected GreqlEvaluator greqlEvaluator;

	@Override
	public synchronized <T extends Vertex> POrderedSet<T> reachableVertices(Vertex startVertex, String pathDescription, Class<T> vertexType) {
		if (greqlEvaluator == null) {
			greqlEvaluator = new GreqlEvaluator((String) null, this, null);
		}
		greqlEvaluator.setVariable("v", startVertex);
		greqlEvaluator.setQuery("using v: v " + pathDescription);
		greqlEvaluator.startEvaluation();
		return greqlEvaluator.getResultSet();
	}

	// ------------------------ Code for Location ------------------------

	public de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location getFirstLocation() {
		return (de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location createLocation() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location> createVertex(de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location createLocation(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location> createVertex(de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location.VC, id, this);
	}

	// ------------------------ Code for Way ------------------------

	public de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way getFirstWay() {
		return (de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way createWay(de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location alpha, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way> createEdge(de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way createWay(int id, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location alpha, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way> createEdge(de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way.EC, id, this, alpha, omega);
	}

	public Iterable<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way> getWayEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way>(this, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Way.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location> getLocationVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location>(this, de.uni_koblenz.jgralabtest.schemas.algolib.weighted.Location.class);
	}
	
}
