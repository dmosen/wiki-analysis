/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.copy;

public interface CopyGraph extends de.uni_koblenz.jgralab.Graph {

	public static final de.uni_koblenz.jgralab.schema.GraphClass GC = de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopySchema.instance().gc_CopyGraph;

	// ------------------------ Code for CopyVertex ------------------------

	/**
	 * @return the first CopyVertex vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopyVertex getFirstCopyVertex();

	// ------------------------ Code for IsPartOfWhole ------------------------

	/**
	 * @return the first IsPartOfWhole edge in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole getFirstIsPartOfWhole();

	/**
	 * Creates a new IsPartOfWhole edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole createIsPartOfWhole(de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart alpha, de.uni_koblenz.jgralabtest.schemas.gretl.copy.Whole omega);

	// ------------------------ Code for IsPartOfWholePart ------------------------

	/**
	 * @return the first IsPartOfWholePart edge in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWholePart getFirstIsPartOfWholePart();

	/**
	 * Creates a new IsPartOfWholePart edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWholePart createIsPartOfWholePart(de.uni_koblenz.jgralabtest.schemas.gretl.copy.Part alpha, de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart omega);

	// ------------------------ Code for Part ------------------------

	/**
	 * @return the first Part vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.Part getFirstPart();

	/**
	 * Creates a new Part vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.Part createPart();

	// ------------------------ Code for Whole ------------------------

	/**
	 * @return the first Whole vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.Whole getFirstWhole();

	// ------------------------ Code for WholeOne ------------------------

	/**
	 * @return the first WholeOne vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholeOne getFirstWholeOne();

	/**
	 * Creates a new WholeOne vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholeOne createWholeOne();

	// ------------------------ Code for WholePart ------------------------

	/**
	 * @return the first WholePart vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart getFirstWholePart();

	/**
	 * Creates a new WholePart vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart createWholePart();

	// ------------------------ Code for WholeTwo ------------------------

	/**
	 * @return the first WholeTwo vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholeTwo getFirstWholeTwo();

	/**
	 * Creates a new WholeTwo vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholeTwo createWholeTwo();

	/**
	 * @return an Iterable for all edges of this graph that are of type IsPartOfWhole or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole> getIsPartOfWholeEdges();
	

	/**
	 * @return an Iterable for all edges of this graph that are of type IsPartOfWholePart or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWholePart> getIsPartOfWholePartEdges();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type WholeTwo or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholeTwo> getWholeTwoVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Whole or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.Whole> getWholeVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type WholeOne or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholeOne> getWholeOneVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Part or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.Part> getPartVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type WholePart or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart> getWholePartVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type CopyVertex or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopyVertex> getCopyVertexVertices();
	
}
