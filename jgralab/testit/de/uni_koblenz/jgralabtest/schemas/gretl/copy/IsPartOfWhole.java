/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.copy;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralabtest.schemas.gretl.copy.Whole;
import de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart;
/**
 * FromVertexClass: WholePart
 * FromRoleName : 
 * ToVertexClass: Whole
 * ToRoleName : 
 */

public interface IsPartOfWhole extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopySchema.instance().ec_IsPartOfWhole;

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole getNextIsPartOfWholeInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole at the "this" vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole getNextIsPartOfWholeIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole getNextIsPartOfWholeIncidence(EdgeDirection orientation);
	public WholePart getAlpha();
	public Whole getOmega();
}
