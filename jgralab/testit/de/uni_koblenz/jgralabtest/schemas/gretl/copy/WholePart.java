/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.copy;

import de.uni_koblenz.jgralab.EdgeDirection;

public interface WholePart extends de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopyVertex {

	public static final de.uni_koblenz.jgralab.schema.VertexClass VC = de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopySchema.instance().vc_WholePart;

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopyVertex vertex in the global vertex sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.CopyVertex getNextCopyVertex();

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart vertex in the global vertex sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.WholePart getNextWholePart();

	/**
	 * @return the first edge of class IsPartOfWhole at this vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole getFirstIsPartOfWholeIncidence();

	/**
	 * @return the first edge of class IsPartOfWhole at this vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole getFirstIsPartOfWholeIncidence(EdgeDirection orientation);

	/**
	 * @return the first edge of class IsPartOfWholePart at this vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWholePart getFirstIsPartOfWholePartIncidence();

	/**
	 * @return the first edge of class IsPartOfWholePart at this vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWholePart getFirstIsPartOfWholePartIncidence(EdgeDirection orientation);

	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsPartOfWhole or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole> getIsPartOfWholeIncidences();
	
	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsPartOfWhole.
	 * @param direction EdgeDirection.IN or EdgeDirection.OUT, only edges of this direction will be included in the Iterable
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWhole> getIsPartOfWholeIncidences(EdgeDirection direction);

	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsPartOfWholePart or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWholePart> getIsPartOfWholePartIncidences();
	
	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsPartOfWholePart.
	 * @param direction EdgeDirection.IN or EdgeDirection.OUT, only edges of this direction will be included in the Iterable
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.copy.IsPartOfWholePart> getIsPartOfWholePartIncidences(EdgeDirection direction);
}
