/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.impl.std;

import de.uni_koblenz.jgralab.impl.EdgeIterable;
import de.uni_koblenz.jgralab.impl.VertexIterable;

import de.uni_koblenz.jgralab.impl.std.GraphImpl;

import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;
import de.uni_koblenz.jgralab.Vertex;
import de.uni_koblenz.jgralab.greql2.evaluator.GreqlEvaluator;

import java.io.IOException;

import org.pcollections.POrderedSet;

public class BedslGraphImpl extends GraphImpl implements de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.BedslGraph, de.uni_koblenz.jgralab.Graph {

	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public BedslGraphImpl() {
		this(null);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public BedslGraphImpl(int vMax, int eMax) {
		this(null, vMax, eMax);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public BedslGraphImpl(java.lang.String id, int vMax, int eMax) {
		super(id, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.BedslGraph.GC, vMax, eMax);
		initializeAttributesWithDefaultValues();
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public BedslGraphImpl(java.lang.String id) {
		super(id, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.BedslGraph.GC);
		initializeAttributesWithDefaultValues();
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.GraphClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.BedslGraph.GC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Graph> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.BedslGraph.class;
	}

	public <T> T getAttribute(String attributeName) {
		throw new NoSuchAttributeException("BedslGraph doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		throw new NoSuchAttributeException("BedslGraph doesn't contain an attribute " + attributeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new NoSuchAttributeException("BedslGraph doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		throw new NoSuchAttributeException("BedslGraph doesn't contain an attribute " + attributeName);
	}
	
	protected GreqlEvaluator greqlEvaluator;

	@Override
	public synchronized <T extends Vertex> POrderedSet<T> reachableVertices(Vertex startVertex, String pathDescription, Class<T> vertexType) {
		if (greqlEvaluator == null) {
			greqlEvaluator = new GreqlEvaluator((String) null, this, null);
		}
		greqlEvaluator.setVariable("v", startVertex);
		greqlEvaluator.setQuery("using v: v " + pathDescription);
		greqlEvaluator.startEvaluation();
		return greqlEvaluator.getResultSet();
	}

	// ------------------------ Code for Attribute ------------------------

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute getFirstAttribute() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute.VC);
	}

	// ------------------------ Code for Entity ------------------------

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity getFirstEntity() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity createEntity() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity> createVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity createEntity(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity> createVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity.VC, id, this);
	}

	// ------------------------ Code for HasAttribute ------------------------

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute getFirstHasAttribute() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute createHasAttribute(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity alpha, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute> createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute createHasAttribute(int id, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity alpha, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute> createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute.EC, id, this, alpha, omega);
	}

	// ------------------------ Code for HasSupertype ------------------------

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype getFirstHasSupertype() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype createHasSupertype(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity alpha, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype> createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype createHasSupertype(int id, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity alpha, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype> createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype.EC, id, this, alpha, omega);
	}

	// ------------------------ Code for ReferenceAttribute ------------------------

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute getFirstReferenceAttribute() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute createReferenceAttribute() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute> createVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute createReferenceAttribute(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute> createVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute.VC, id, this);
	}

	// ------------------------ Code for References ------------------------

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References getFirstReferences() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References createReferences(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute alpha, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References> createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References createReferences(int id, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute alpha, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References> createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References.EC, id, this, alpha, omega);
	}

	// ------------------------ Code for SimpleAttribute ------------------------

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute getFirstSimpleAttribute() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute createSimpleAttribute() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute> createVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute createSimpleAttribute(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute> createVertex(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute.VC, id, this);
	}

	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute> getHasAttributeEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute>(this, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasAttribute.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References> getReferencesEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References>(this, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.References.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype> getHasSupertypeEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype>(this, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.HasSupertype.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute> getSimpleAttributeVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute>(this, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.SimpleAttribute.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute> getAttributeVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute>(this, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Attribute.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute> getReferenceAttributeVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute>(this, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.ReferenceAttribute.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity> getEntityVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity>(this, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl.Entity.class);
	}
	
}
