/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.impl.std;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class ChassisImpl extends VertexImpl implements de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Chassis, de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Element {

	protected java.lang.String _name;

	public ChassisImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Chassis.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Chassis.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("name")) return (T) get_name();
		throw new NoSuchAttributeException("Chassis doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("name")) {
			set_name((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("Chassis doesn't contain an attribute " + attributeName);
	}

	public java.lang.String get_name() {
		return _name;
	}

	public void set_name(java.lang.String _name) {
		ecaAttributeChanging("name", this._name, _name);
		Object oldValue = this._name;
		this._name = _name;
		graphModified();
	ecaAttributeChanged("name", oldValue, _name);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_name = io.matchUtfString();
		set_name(_name);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_name = io.matchUtfString();
			set_name(_name);
			return;
		}
		throw new NoSuchAttributeException("Chassis doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeUtfString(_name);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_name);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("Chassis doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Chassis getNextChassis() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Chassis)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Chassis.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Element getNextElement() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Element)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Element.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig getFirstHasConfigIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig getFirstHasConfigIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class, orientation);
	}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig add_config(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.PddslGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Chassis) this, (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration> remove_config() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration>();
			de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig edge = (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig next = (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class, EdgeDirection.OUT);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_config(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig edge = (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig next = (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration get_config() {
			de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig edge = (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class, EdgeDirection.OUT);
			if (edge != null) {
				return (de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.Configuration) edge.getThat();
			}
			return null;
		}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig> getHasConfigIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig>(this, de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig> getHasConfigIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig>(this, de.uni_koblenz.jgralabtest.schemas.gretl.pddsl.HasConfig.class, direction);
	}
}
