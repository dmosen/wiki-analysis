/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.Chassis;
import de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.Configuration;
/**
 * FromVertexClass: Chassis
 * FromRoleName : 
 * ToVertexClass: Configuration
 * ToRoleName : config
 */

public interface HasConfig extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.IntegratedBedslPddslSchema.instance().ec_HasConfig;

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig getNextHasConfigInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig at the "this" vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig getNextHasConfigIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig getNextHasConfigIncidence(EdgeDirection orientation);
	public Chassis getAlpha();
	public Configuration getOmega();
}
