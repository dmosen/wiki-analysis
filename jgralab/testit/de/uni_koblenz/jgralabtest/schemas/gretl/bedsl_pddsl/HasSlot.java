/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.Configuration;
import de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.Slot;
/**
 * FromVertexClass: Configuration
 * FromRoleName : 
 * ToVertexClass: Slot
 * ToRoleName : slot
 */

public interface HasSlot extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.IntegratedBedslPddslSchema.instance().ec_HasSlot;

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasSlot edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasSlot getNextHasSlotInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasSlot at the "this" vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasSlot getNextHasSlotIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasSlot at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasSlot getNextHasSlotIncidence(EdgeDirection orientation);
	public Configuration getAlpha();
	public Slot getOmega();
}
