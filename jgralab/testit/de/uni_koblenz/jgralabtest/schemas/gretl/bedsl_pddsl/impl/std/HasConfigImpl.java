/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.impl.std;

import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;
import de.uni_koblenz.jgralab.Vertex;

import de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.impl.std.ReversedHasConfigImpl;

import de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.Chassis;
import de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.Configuration;

import java.io.IOException;
/**
 * FromVertexClass: Chassis
 * FromRoleName : 
 * ToVertexClass: Configuration
 * ToRoleName : config
 */

public class HasConfigImpl extends EdgeImpl implements de.uni_koblenz.jgralab.Edge, de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig {

	public HasConfigImpl(int id, de.uni_koblenz.jgralab.Graph g, Vertex alpha, Vertex omega) {
		super(id, g, alpha, omega);
		((de.uni_koblenz.jgralab.impl.InternalGraph) graph).addEdge(this, alpha, omega);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig.EC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Edge> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig.class;
	}

	public <T> T getAttribute(String attributeName) {
		throw new NoSuchAttributeException("HasConfig doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		throw new NoSuchAttributeException("HasConfig doesn't contain an attribute " + attributeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new NoSuchAttributeException("HasConfig doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		throw new NoSuchAttributeException("HasConfig doesn't contain an attribute " + attributeName);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig getNextHasConfigInGraph() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig)getNextEdge(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig getNextHasConfigIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig getNextHasConfigIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.bedsl_pddsl.HasConfig.class, orientation);
	}

	public de.uni_koblenz.jgralab.schema.AggregationKind getAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.SHARED;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getAlphaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.NONE;
	}

	@Override
	public de.uni_koblenz.jgralab.schema.AggregationKind getOmegaAggregationKind() {
		return de.uni_koblenz.jgralab.schema.AggregationKind.SHARED;
	}

	protected de.uni_koblenz.jgralab.impl.ReversedEdgeBaseImpl createReversedEdge() {
		return new ReversedHasConfigImpl(this, graph);
	}
	public Chassis getAlpha() {
		return (Chassis) super.getAlpha();
	}
	public Configuration getOmega() {
		return (Configuration) super.getOmega();
	}
}
