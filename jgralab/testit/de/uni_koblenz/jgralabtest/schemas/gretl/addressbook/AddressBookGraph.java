/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.addressbook;

public interface AddressBookGraph extends de.uni_koblenz.jgralab.Graph {

	public static final de.uni_koblenz.jgralab.schema.GraphClass GC = de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.AddressBookSchema.instance().gc_AddressBookGraph;

	public java.lang.String get_name();

	public void set_name(java.lang.String _name);

	// ------------------------ Code for AddressBook ------------------------

	/**
	 * @return the first AddressBook vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.AddressBook getFirstAddressBook();

	/**
	 * Creates a new AddressBook vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.AddressBook createAddressBook();

	// ------------------------ Code for Contact ------------------------

	/**
	 * @return the first Contact vertex in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.Contact getFirstContact();

	/**
	 * Creates a new Contact vertex in this graph.
	 *
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.Contact createContact();

	// ------------------------ Code for Contains ------------------------

	/**
	 * @return the first Contains edge in this graph
	 */
	public de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.Contains getFirstContains();

	/**
	 * Creates a new Contains edge in this graph.
	 *
	 * @param alpha the start vertex of the edge
	 * @param omega the target vertex of the edge
	*/
	public de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.Contains createContains(de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.AddressBook alpha, de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.Contact omega);

	/**
	 * @return an Iterable for all edges of this graph that are of type Contains or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.Contains> getContainsEdges();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type AddressBook or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.AddressBook> getAddressBookVertices();
	

	/**
	 * @return an Iterable for all vertices of this graph that are of type Contact or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.addressbook.Contact> getContactVertices();
	
}
