/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.impl.std;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class PrimitiveDataTypeImpl extends VertexImpl implements de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PrimitiveDataType {

	protected java.lang.String _kind;

	protected java.lang.String _name;

	public PrimitiveDataTypeImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PrimitiveDataType.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PrimitiveDataType.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("kind")) return (T) get_kind();
		if (attributeName.equals("name")) return (T) get_name();
		throw new NoSuchAttributeException("PrimitiveDataType doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("kind")) {
			set_kind((java.lang.String) data);
			return;
		}
		if (attributeName.equals("name")) {
			set_name((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("PrimitiveDataType doesn't contain an attribute " + attributeName);
	}

	public java.lang.String get_kind() {
		return _kind;
	}

	public void set_kind(java.lang.String _kind) {
		ecaAttributeChanging("kind", this._kind, _kind);
		Object oldValue = this._kind;
		this._kind = _kind;
		graphModified();
	ecaAttributeChanged("kind", oldValue, _kind);
	}

	public java.lang.String get_name() {
		return _name;
	}

	public void set_name(java.lang.String _name) {
		ecaAttributeChanging("name", this._name, _name);
		Object oldValue = this._name;
		this._name = _name;
		graphModified();
	ecaAttributeChanged("name", oldValue, _name);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_kind = io.matchUtfString();
		set_kind(_kind);
		_name = io.matchUtfString();
		set_name(_name);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("kind")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_kind = io.matchUtfString();
			set_kind(_kind);
			return;
		}
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_name = io.matchUtfString();
			set_name(_name);
			return;
		}
		throw new NoSuchAttributeException("PrimitiveDataType doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeUtfString(_kind);
		io.writeUtfString(_name);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("kind")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_kind);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_name);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("PrimitiveDataType doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier getNextClassifier() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PackagableElement getNextPackagableElement() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PackagableElement)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PackagableElement.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PrimitiveDataType getNextPrimitiveDataType() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PrimitiveDataType)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PrimitiveDataType.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.UMLModelElement getNextUMLModelElement() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.UMLModelElement)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.UMLModelElement.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains getFirstContainsIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains getFirstContainsIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType getFirstHasTypeIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType getFirstHasTypeIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class, orientation);
	}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains add_namespace(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.SimpleUMLGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package) vertex, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PrimitiveDataType) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package> remove_namespace() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package>();
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_namespace(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package get_namespace() {
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
			if (edge != null) {
				return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package) edge.getThat();
			}
			return null;
		}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains> getContainsIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains> getContainsIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType> getHasTypeIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType> getHasTypeIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class, direction);
	}
}
