/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.impl.std;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class ClassImpl extends VertexImpl implements de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier {

	protected java.lang.String _kind;

	protected java.lang.String _name;

	public ClassImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("kind")) return (T) get_kind();
		if (attributeName.equals("name")) return (T) get_name();
		throw new NoSuchAttributeException("Class doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("kind")) {
			set_kind((java.lang.String) data);
			return;
		}
		if (attributeName.equals("name")) {
			set_name((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("Class doesn't contain an attribute " + attributeName);
	}

	public java.lang.String get_kind() {
		return _kind;
	}

	public void set_kind(java.lang.String _kind) {
		ecaAttributeChanging("kind", this._kind, _kind);
		Object oldValue = this._kind;
		this._kind = _kind;
		graphModified();
	ecaAttributeChanged("kind", oldValue, _kind);
	}

	public java.lang.String get_name() {
		return _name;
	}

	public void set_name(java.lang.String _name) {
		ecaAttributeChanging("name", this._name, _name);
		Object oldValue = this._name;
		this._name = _name;
		graphModified();
	ecaAttributeChanged("name", oldValue, _name);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_kind = io.matchUtfString();
		set_kind(_kind);
		_name = io.matchUtfString();
		set_name(_name);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("kind")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_kind = io.matchUtfString();
			set_kind(_kind);
			return;
		}
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_name = io.matchUtfString();
			set_name(_name);
			return;
		}
		throw new NoSuchAttributeException("Class doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeUtfString(_kind);
		io.writeUtfString(_name);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("kind")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_kind);
			return io.getStringWriterResult();
		}
		if (attributeName.equals("name")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_name);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("Class doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class getNextClass() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier getNextClassifier() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Classifier.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PackagableElement getNextPackagableElement() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PackagableElement)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.PackagableElement.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.UMLModelElement getNextUMLModelElement() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.UMLModelElement)getNextVertex(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.UMLModelElement.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains getFirstContainsIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains getFirstContainsIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType getFirstHasTypeIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType getFirstHasTypeIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource getFirstHasSourceIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource getFirstHasSourceIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget getFirstHasTargetIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget getFirstHasTargetIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute getFirstHasAttributeIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute getFirstHasAttributeIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass getFirstHasSuperclassIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class);
	}

	@Override
	public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass getFirstHasSuperclassIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass)getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, orientation);
	}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget add_forward(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.SimpleUMLGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association) vertex, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association> remove_forward() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association>();
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_forward(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association> get_forward() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class, EdgeDirection.IN);
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass add_subclass(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.SimpleUMLGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) vertex, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class> remove_subclass() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class>();
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_subclass(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class> get_subclass() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.IN);
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains add_namespace(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.SimpleUMLGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package) vertex, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package> remove_namespace() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package>();
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_namespace(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package get_namespace() {
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, EdgeDirection.IN);
			if (edge != null) {
				return (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Package) edge.getThat();
			}
			return null;
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource add_reverse(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.SimpleUMLGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association) vertex, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association> remove_reverse() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association>();
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_reverse(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association> get_reverse() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Association>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class, EdgeDirection.IN);
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute add_attribute(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.SimpleUMLGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) this, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute> remove_attribute() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute>();
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class, EdgeDirection.OUT);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_attribute(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute> get_attribute() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Attribute>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class, EdgeDirection.OUT);
		}
		@Override
		public de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass add_general(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class vertex) {
			return ((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.SimpleUMLGraph)getGraph()).createEdge(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.EC, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) this, (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class> remove_general() {
			java.util.List<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class>();
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.OUT);
				adjacences.add((de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_general(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass edge = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) getFirstIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass next = (de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass) edge.getNextIncidence(de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class> get_general() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Class>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, EdgeDirection.OUT);
		}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains> getContainsIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains> getContainsIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.Contains.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType> getHasTypeIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType> getHasTypeIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasType.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource> getHasSourceIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource> getHasSourceIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSource.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget> getHasTargetIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget> getHasTargetIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasTarget.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute> getHasAttributeIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute> getHasAttributeIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasAttribute.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass> getHasSuperclassIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass> getHasSuperclassIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass>(this, de.uni_koblenz.jgralabtest.schemas.gretl.qvt.simpleuml.HasSuperclass.class, direction);
	}
}
