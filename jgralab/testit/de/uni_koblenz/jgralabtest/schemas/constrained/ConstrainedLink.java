/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.constrained;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedNode;
/**
 * FromVertexClass: ConstrainedNode
 * FromRoleName : 
 * ToVertexClass: ConstrainedNode
 * ToRoleName : 
 */

public interface ConstrainedLink extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedSchema.instance().ec_ConstrainedLink;

	public int get_uid();

	public void set_uid(int _uid);

	/**
	 * @return the next de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedLink edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedLink getNextConstrainedLinkInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedLink at the "this" vertex
	 */
	public de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedLink getNextConstrainedLinkIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedLink at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralabtest.schemas.constrained.ConstrainedLink getNextConstrainedLinkIncidence(EdgeDirection orientation);
	public ConstrainedNode getAlpha();
	public ConstrainedNode getOmega();
}
