/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.motorwaymap;

import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class TestRecord implements de.uni_koblenz.jgralab.Record {
	private static List<String> componentNames = new ArrayList<String>(7);

	static {
		componentNames.add("c1");
		componentNames.add("c2");
		componentNames.add("c4");
		componentNames.add("c6");
		componentNames.add("c7");
		componentNames.add("c8");
		componentNames.add("c9");
		componentNames = Collections.unmodifiableList(componentNames);
	}

	@Override
	public List<String> getComponentNames() {
		return componentNames;
	}

	@Override
	public boolean hasComponent(String name) {
		return componentNames.contains(name);
	}

	@Override
public int size() {
	return 7;
}

	private final java.lang.String _c1;

	private final org.pcollections.PVector<java.lang.String> _c2;

	private final org.pcollections.PSet<java.lang.String> _c4;

	private final int _c6;

	private final double _c7;

	private final long _c8;

	private final boolean _c9;

	public TestRecord(java.lang.String _c1, org.pcollections.PVector<java.lang.String> _c2, org.pcollections.PSet<java.lang.String> _c4, int _c6, double _c7, long _c8, boolean _c9) {
		this._c1 = _c1;
		this._c2 = _c2;
		this._c4 = _c4;
		this._c6 = _c6;
		this._c7 = _c7;
		this._c8 = _c8;
		this._c9 = _c9;
	}
	
	@SuppressWarnings("unchecked")
	public TestRecord(java.util.Map<String, Object> componentValues) {
		assert componentValues.size() == 7;
		assert componentValues.containsKey("c1");
		_c1 = (java.lang.String)componentValues.get("c1");
		assert componentValues.containsKey("c2");
		_c2 = (org.pcollections.PVector<java.lang.String>)componentValues.get("c2");
		assert componentValues.containsKey("c4");
		_c4 = (org.pcollections.PSet<java.lang.String>)componentValues.get("c4");
		assert componentValues.containsKey("c6");
		_c6 = (java.lang.Integer)componentValues.get("c6");
		assert componentValues.containsKey("c7");
		_c7 = (java.lang.Double)componentValues.get("c7");
		assert componentValues.containsKey("c8");
		_c8 = (java.lang.Long)componentValues.get("c8");
		assert componentValues.containsKey("c9");
		_c9 = (java.lang.Boolean)componentValues.get("c9");
	}

	public TestRecord(GraphIO io) throws GraphIOException {
		io.match("(");
		_c1 = io.matchUtfString();
		
		if (io.isNextToken("[")) {
			org.pcollections.PVector<java.lang.String> $_c2 = de.uni_koblenz.jgralab.JGraLab.vector();
			io.match("[");
			while (!io.isNextToken("]")) {
				java.lang.String $_c2Element;
				$_c2Element = io.matchUtfString();
				$_c2 = $_c2.plus($_c2Element);
			}
			io.match("]");
			_c2 = $_c2;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match(); 
			_c2 = null;
		} else {
			_c2 = null;
		}
		
		if (io.isNextToken("{")) {
			org.pcollections.PSet<java.lang.String> $_c4 = de.uni_koblenz.jgralab.JGraLab.set();
			io.match("{");
			while (!io.isNextToken("}")) {
				java.lang.String $_c4Element;
				$_c4Element = io.matchUtfString();
				$_c4 = $_c4.plus($_c4Element);
			}
			io.match("}");
			_c4 = $_c4;
		} else if (io.isNextToken(GraphIO.NULL_LITERAL)) {
			io.match();
			_c4 = null;
		} else {
			_c4 = null;
		}
		_c6 = io.matchInteger();
		_c7 = io.matchDouble();
		_c8 = io.matchLong();
		_c9 = io.matchBoolean();
		io.match(")");
	}

	public java.lang.String get_c1() {
		return _c1;
	}

	public org.pcollections.PVector<java.lang.String> get_c2() {
		return _c2;
	}

	public org.pcollections.PSet<java.lang.String> get_c4() {
		return _c4;
	}

	public int get_c6() {
		return _c6;
	}

	public double get_c7() {
		return _c7;
	}

	public long get_c8() {
		return _c8;
	}

	public boolean is_c9() {
		return _c9;
	}

	@Override
	public Object getComponent(String name) {
		if (name.equals("c1")) {
			return _c1;
		}
		if (name.equals("c2")) {
			return _c2;
		}
		if (name.equals("c4")) {
			return _c4;
		}
		if (name.equals("c6")) {
			return _c6;
		}
		if (name.equals("c7")) {
			return _c7;
		}
		if (name.equals("c8")) {
			return _c8;
		}
		if (name.equals("c9")) {
			return _c9;
		}
		throw new NoSuchAttributeException("TestRecord doesn't contain an attribute " + name);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		String c1String;
		if (_c1 == null) c1String = "null";
		else c1String = String.valueOf(_c1);;
		sb.append("[").append("c1").append("=").append(c1String);
		String c2String;
		if (_c2 == null) c2String = "null";
		else c2String = _c2.toString();
		sb.append(", ").append("c2").append("=").append(c2String);
		String c4String;
		if (_c4 == null) c4String = "null";
		else c4String = _c4.toString();
		sb.append(", ").append("c4").append("=").append(c4String);
		String c6String;
		c6String = String.valueOf(_c6);;
		sb.append(", ").append("c6").append("=").append(c6String);
		String c7String;
		c7String = String.valueOf(_c7);;
		sb.append(", ").append("c7").append("=").append(c7String);
		String c8String;
		c8String = String.valueOf(_c8);;
		sb.append(", ").append("c8").append("=").append(c8String);
		String c9String;
		c9String = String.valueOf(_c9);;
		sb.append(", ").append("c9").append("=").append(c9String);
		return sb.append("]").toString();
	}

	@Override
	public void writeComponentValues(GraphIO io) throws IOException, GraphIOException {
		io.writeSpace();
		io.write("(");
		io.noSpace();
		io.writeUtfString(_c1);
		if (_c2 != null) {
			io.writeSpace();
			io.write("[");
			io.noSpace();
			for (java.lang.String _c2Element : _c2) {
				io.writeUtfString(_c2Element);
			}
			io.write("]");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		if (_c4 != null) {
			io.writeSpace();
			io.write("{");
			io.noSpace();
			for (java.lang.String _c4Element : _c4) {
				io.writeUtfString(_c4Element);
			}
			io.write("}");
			io.space();
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
		io.writeInteger(_c6);
		io.writeDouble(_c7);
		io.writeLong(_c8);
		io.writeBoolean(_c9);
		io.write(")");
	}
	public org.pcollections.PMap<String, Object> toPMap() {
		org.pcollections.PMap<String, Object> m = de.uni_koblenz.jgralab.JGraLab.map();
		m = m.plus("c1", _c1);
		m = m.plus("c2", _c2);
		m = m.plus("c4", _c4);
		m = m.plus("c6", _c6);
		m = m.plus("c7", _c7);
		m = m.plus("c8", _c8);
		m = m.plus("c9", _c9);
		return m;
	}

	@Override
	public boolean equals(Object o) {
		if (o == null) {
			return false;
		}
		if (o instanceof TestRecord) {
			TestRecord rec = (TestRecord) o;
			if (!(_c1.equals(rec._c1))) {
				return false;
				}
			if (!(_c2.equals(rec._c2))) {
				return false;
				}
			if (!(_c4.equals(rec._c4))) {
				return false;
				}
			if (_c6 != rec._c6) {
				return false;
			}
			if (_c7 != rec._c7) {
				return false;
			}
			if (_c8 != rec._c8) {
				return false;
			}
			if (_c9 != rec._c9) {
				return false;
			}
			return true;
		}
		if (o instanceof de.uni_koblenz.jgralab.Record) {
			de.uni_koblenz.jgralab.Record rec = (de.uni_koblenz.jgralab.Record) o;
			if (rec.size() != 7) {
				return false;
			}
			try {
				if (!rec.getComponent("c1").equals(_c1)) {
					return false;
				}
				if (!rec.getComponent("c2").equals(_c2)) {
					return false;
				}
				if (!rec.getComponent("c4").equals(_c4)) {
					return false;
				}
				if (!rec.getComponent("c6").equals(_c6)) {
					return false;
				}
				if (!rec.getComponent("c7").equals(_c7)) {
					return false;
				}
				if (!rec.getComponent("c8").equals(_c8)) {
					return false;
				}
				if (!rec.getComponent("c9").equals(_c9)) {
					return false;
				}
				return true;
			} catch (NoSuchAttributeException e) {
				return false;
			}
		}
		return false;
	}

	@Override
	public int hashCode() {
		int h = 0;
		h += _c1.hashCode();
		h += _c2.hashCode();
		h += _c4.hashCode();
		h += ((java.lang.Integer) _c6).hashCode();
		h += ((java.lang.Double) _c7).hashCode();
		h += ((java.lang.Long) _c8).hashCode();
		h += ((java.lang.Boolean) _c9).hashCode();
		return h;
	}
}
