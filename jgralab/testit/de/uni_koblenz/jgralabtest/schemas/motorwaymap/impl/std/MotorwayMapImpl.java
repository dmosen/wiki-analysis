/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.motorwaymap.impl.std;

import de.uni_koblenz.jgralab.impl.EdgeIterable;
import de.uni_koblenz.jgralab.impl.VertexIterable;

import de.uni_koblenz.jgralab.impl.std.GraphImpl;

import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;
import de.uni_koblenz.jgralab.Vertex;
import de.uni_koblenz.jgralab.greql2.evaluator.GreqlEvaluator;

import java.io.IOException;

import org.pcollections.POrderedSet;

public class MotorwayMapImpl extends GraphImpl implements de.uni_koblenz.jgralab.Graph, de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayMap {

	protected java.lang.String _test;

	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public MotorwayMapImpl() {
		this(null);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public MotorwayMapImpl(int vMax, int eMax) {
		this(null, vMax, eMax);
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public MotorwayMapImpl(java.lang.String id, int vMax, int eMax) {
		super(id, de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayMap.GC, vMax, eMax);
		initializeAttributesWithDefaultValues();
	}
	
	/**
	 * DON'T USE THE CONSTRUCTOR
	 * For instantiating a Graph, use the Schema and a GraphFactory
	**/
	public MotorwayMapImpl(java.lang.String id) {
		super(id, de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayMap.GC);
		initializeAttributesWithDefaultValues();
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.GraphClass getAttributedElementClass() {
		return de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayMap.GC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Graph> getSchemaClass() {
		return de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayMap.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("test")) return (T) get_test();
		throw new NoSuchAttributeException("MotorwayMap doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("test")) {
			set_test((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("MotorwayMap doesn't contain an attribute " + attributeName);
	}

	public java.lang.String get_test() {
		return _test;
	}

	public void set_test(java.lang.String _test) {
		ecaAttributeChanging("test", this._test, _test);
		Object oldValue = this._test;
		this._test = _test;
		graphModified();
	ecaAttributeChanged("test", oldValue, _test);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_test = io.matchUtfString();
		set_test(_test);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("test")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_test = io.matchUtfString();
			set_test(_test);
			return;
		}
		throw new NoSuchAttributeException("MotorwayMap doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeUtfString(_test);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("test")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_test);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("MotorwayMap doesn't contain an attribute " + attributeName);
	}
	
	protected GreqlEvaluator greqlEvaluator;

	@Override
	public synchronized <T extends Vertex> POrderedSet<T> reachableVertices(Vertex startVertex, String pathDescription, Class<T> vertexType) {
		if (greqlEvaluator == null) {
			greqlEvaluator = new GreqlEvaluator((String) null, this, null);
		}
		greqlEvaluator.setVariable("v", startVertex);
		greqlEvaluator.setQuery("using v: v " + pathDescription);
		greqlEvaluator.startEvaluation();
		return greqlEvaluator.getResultSet();
	}

	// ------------------------ Code for City ------------------------

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.City getFirstCity() {
		return (de.uni_koblenz.jgralabtest.schemas.motorwaymap.City)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.City.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.City createCity() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.City> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.City.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.City createCity(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.City> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.City.VC, id, this);
	}

	// ------------------------ Code for Exit ------------------------

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit getFirstExit() {
		return (de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit createExit(de.uni_koblenz.jgralabtest.schemas.motorwaymap.City alpha, de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit> createEdge(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit createExit(int id, de.uni_koblenz.jgralabtest.schemas.motorwaymap.City alpha, de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit> createEdge(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit.EC, id, this, alpha, omega);
	}

	// ------------------------ Code for Motorway ------------------------

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway getFirstMotorway() {
		return (de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway createMotorway() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway createMotorway(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway.VC, id, this);
	}

	// ------------------------ Code for MotorwayRestaurant ------------------------

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant getFirstMotorwayRestaurant() {
		return (de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant createMotorwayRestaurant() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant createMotorwayRestaurant(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant.VC, id, this);
	}

	// ------------------------ Code for MotorwayStation ------------------------

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation getFirstMotorwayStation() {
		return (de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation.VC);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation createMotorwayStation() {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation.VC, 0, this);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation createMotorwayStation(int id) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation> createVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation.VC, id, this);
	}

	// ------------------------ Code for Offers ------------------------

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers getFirstOffers() {
		return (de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers)getFirstEdge(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers.EC);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers createOffers(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway alpha, de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers> createEdge(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers.EC, 0, this, alpha, omega);
	}

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers createOffers(int id, de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway alpha, de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace omega) {
		return graphFactory.<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers> createEdge(de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers.EC, id, this, alpha, omega);
	}

	// ------------------------ Code for StoppingPlace ------------------------

	public de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace getFirstStoppingPlace() {
		return (de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace)getFirstVertex(de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace.VC);
	}

	public Iterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers> getOffersEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers>(this, de.uni_koblenz.jgralabtest.schemas.motorwaymap.Offers.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit> getExitEdges() {
		return new EdgeIterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit>(this, de.uni_koblenz.jgralabtest.schemas.motorwaymap.Exit.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway> getMotorwayVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway>(this, de.uni_koblenz.jgralabtest.schemas.motorwaymap.Motorway.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant> getMotorwayRestaurantVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant>(this, de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayRestaurant.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation> getMotorwayStationVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation>(this, de.uni_koblenz.jgralabtest.schemas.motorwaymap.MotorwayStation.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace> getStoppingPlaceVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace>(this, de.uni_koblenz.jgralabtest.schemas.motorwaymap.StoppingPlace.class);
	}
	

	public Iterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.City> getCityVertices() {
		return new VertexIterable<de.uni_koblenz.jgralabtest.schemas.motorwaymap.City>(this, de.uni_koblenz.jgralabtest.schemas.motorwaymap.City.class);
	}
	
}
