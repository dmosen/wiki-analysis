/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralabtest.schemas.greqltestschema.impl.trans.connections;

import de.uni_koblenz.jgralab.impl.trans.ReversedEdgeImpl;
import de.uni_koblenz.jgralab.impl.trans.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.Graph;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import de.uni_koblenz.jgralabtest.schemas.greqltestschema.junctions.Airport;

import java.io.IOException;

public class ReversedAirRouteImpl extends ReversedEdgeImpl implements de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute, de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection {

	ReversedAirRouteImpl(EdgeImpl e, Graph g) {
		super(e, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return getNormalEdge().getAttributedElementClass();
	}

	public double get_length() {
		return ((de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute)normalEdge).get_length();
	}

	public void set_length(double _length) {
		((de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute)normalEdge).set_length(_length);
	}

	public java.lang.String get_routeName() {
		return ((de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute)normalEdge).get_routeName();
	}

	public void set_routeName(java.lang.String _routeName) {
		((de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute)normalEdge).set_routeName(_routeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValues for reversed Edges.");
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValuesFromString for reversed Edges.");
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		throw new GraphIOException("Can not call writeAttributeValues for reversed Edges.");
	}

	public String writeAttributeValueToString(String _attributeName) throws IOException, GraphIOException {
		throw new GraphIOException("Can not call writeAttributeValueToString for reversed Edges.");
	}
	protected java.util.Set<de.uni_koblenz.jgralab.trans.VersionedDataObject<?>> attributes() {
		return ((EdgeImpl) normalEdge).attributes();
	}

	public de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute getNextAirRouteInGraph() {
		return ((de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute)normalEdge).getNextAirRouteInGraph();
	}

	public de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection getNextConnectionInGraph() {
		return ((de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection)normalEdge).getNextConnectionInGraph();
	}

	public de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute getNextAirRouteIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute getNextAirRouteIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.AirRoute.class, orientation);
	}

	public de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection getNextConnectionIncidence() {
		return (de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection.class);
	}

	public de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection getNextConnectionIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection)getNextIncidence(de.uni_koblenz.jgralabtest.schemas.greqltestschema.connections.Connection.class, orientation);
	}
	public Airport getAlpha() {
		return (Airport) super.getAlpha();
	}
	public Airport getOmega() {
		return (Airport) super.getOmega();
	}
}
