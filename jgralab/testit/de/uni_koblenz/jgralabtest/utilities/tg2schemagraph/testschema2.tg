// JGraLab - The Java Graph Laboratory
// 
// Copyright (C) 2006-2011 Institute for Software Technology
//                         University of Koblenz-Landau, Germany
//                         ist@uni-koblenz.de
// 
// For bug reports, documentation and further information, visit
// 
//                         http://jgralab.uni-koblenz.de
// 
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3 of the License, or (at your
// option) any later version.
// 
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
// Public License for more details.
// 
// You should have received a copy of the GNU General Public License along
// with this program; if not, see <http://www.gnu.org/licenses>.
// 
// Additional permission under GNU GPL version 3 section 7
// 
// If you modify this Program, or any covered work, by linking or combining
// it with Eclipse (or a modified version of that program or an Eclipse
// plugin), containing parts covered by the terms of the Eclipse Public
// License (EPL), the licensors of this Program grant you additional
// permission to convey the resulting work.  Corresponding Source for a
// non-source form of such a combination shall include the source code for
// the parts of JGraLab used as well as that of the covered work.

TGraph 2;
Schema de.uni_koblenz.jgralabtest.tg2schemagraphtest.testschema2.TestSchema2;
GraphClass AttributeGraph;
EnumDomain CountEnum (ONE, TWO, THREE);
EnumDomain attribute_subpackage.PackageEnum (ONE, TWO, THREE);
RecordDomain Record1 (listOfSetOfCountEnum: List<Set<CountEnum>>, anInteger: Integer, anEnum: attribute_subpackage.PackageEnum);
RecordDomain Record2 (aListOfRecord1s: List<Record1>, aRecordInAnotherPackage: attribute_subpackage.PackageRecord);
RecordDomain ARecordThatIsNotAnAttribute (aSetOfPackageRecords: Set<attribute_subpackage.PackageRecord>, aRecord2Record: Record2);
RecordDomain attribute_subpackage.PackageRecord (myValues: List<Integer>, myName: String);
Package attribute_subpackage;
Package;
VertexClass CollectionAttributeVertex {listOfInt: List<Integer>, listOfString: List<String>, listOfDouble: List<Double>, listOfBoolean: List<Boolean>, listOfLong: List<Long>, listOfEnum: List<CountEnum>, setOfInt: Set<Integer>, setOfString: Set<String>, setOfDouble: Set<Double>, setOfBoolean: Set<Boolean>, setOfLong: Set<Long>, setOfEnum: Set<CountEnum>, setOfsetOfString: Set<Set<String>>, listOfListOfString: List<List<String>>};
VertexClass RecordAttributeVertex {aListOfRecord1s: List<Record1>, aSetOfRecord2s: Set<Record2>, aRecordInASubpackge: attribute_subpackage.PackageRecord};
VertexClass SimpleAttributeVertex {anInteger: Integer, aString: String, aDouble: Double, aBoolean: Boolean, aLong: Long, anEnum: CountEnum};
