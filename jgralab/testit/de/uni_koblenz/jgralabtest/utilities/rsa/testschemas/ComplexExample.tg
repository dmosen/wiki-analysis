// JGraLab - The Java Graph Laboratory
// 
// Copyright (C) 2006-2011 Institute for Software Technology
//                         University of Koblenz-Landau, Germany
//                         ist@uni-koblenz.de
// 
// For bug reports, documentation and further information, visit
// 
//                         http://jgralab.uni-koblenz.de
// 
// This program is free software; you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation; either version 3 of the License, or (at your
// option) any later version.
// 
// This program is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
// Public License for more details.
// 
// You should have received a copy of the GNU General Public License along
// with this program; if not, see <http://www.gnu.org/licenses>.
// 
// Additional permission under GNU GPL version 3 section 7
// 
// If you modify this Program, or any covered work, by linking or combining
// it with Eclipse (or a modified version of that program or an Eclipse
// plugin), containing parts covered by the terms of the Eclipse Public
// License (EPL), the licensors of this Program grant you additional
// permission to convey the resulting work.  Corresponding Source for a
// non-source form of such a combination shall include the source code for
// the parts of JGraLab used as well as that of the covered work.

TGraph 2;

Schema y.Sandkasten;

GraphClass AGraphClass {aBoolean: Boolean = "t", aString: String = "\\\"hallo\\\"", aInteger: Integer = "1", aDouble: Double = "1.5", aLong: Long = "4", enum: Enumeration1 = "FIRST", arecord: Record1 = "(t 1)", aList: List<Boolean>, aSet: Set<Double>, aMap: Map<String, Enumeration1>, aComplexList: List<Set<Boolean>> = "[{t} {f} {t}]"} ["Nachricht" "-->{VertexClassB}" "off"];

Comment AGraphClass "A Comment\n\u00e4\u00f6\u00fc\u00df";
Package ;
Comment Enumeration1 "a comment";
EnumDomain Enumeration1 (FIRST, SECOND);
Comment Record1 "another comment";
RecordDomain Record1 (anAttribute: Boolean, anotherAttribute: Integer);
VertexClass VertexClass1: VertexClass2;
abstract VertexClass VertexClass2;
VertexClass VertexClass3 {secondDouble: Double};
Package package1;
VertexClass VertexClassA;
VertexClass VertexClassB;
Comment package1.EdgClassE "Comment to the Edge";
EdgeClass EdgClassE: EdgeClassSuper from VertexClassA (1,1) role roleNameVCA to VertexClassB (1,1) role roleNameVCB redefines vertexClassB ["Nachricht" "-->{VertexClassB}" "off"];
abstract EdgeClass EdgeClassSuper from VertexClassA (0,*) role vertexClassA to VertexClassB (1,*) role vertexClassB;
EdgeClass Aggregation from VertexClassB (1,1) role vertexClassB2 to VertexClassA (0,*) role vertexClassA2 aggregation shared;
EdgeClass Composition from VertexClassB (0,*) role vertexclassb to VertexClassA (0,*) role vertexClassA3 aggregation composite;
EdgeClass AssociationClass: EdgeClassSuper from VertexClassA (0,1) role roleA redefines vertexClassA to VertexClassB (1,1) role vertexclassbX {anInteger: Integer};
EdgeClass Navigable from VertexClassA (1,1) role vertexClassA4 to VertexClassB (1,1) role vertexClassB3;

