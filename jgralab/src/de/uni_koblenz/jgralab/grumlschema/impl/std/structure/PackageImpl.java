/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.grumlschema.impl.std.structure;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class PackageImpl extends VertexImpl implements de.uni_koblenz.jgralab.grumlschema.structure.NamedElement, de.uni_koblenz.jgralab.grumlschema.structure.Package {

	protected java.lang.String _qualifiedName;

	public PackageImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralab.grumlschema.structure.Package.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralab.grumlschema.structure.Package.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("qualifiedName")) return (T) get_qualifiedName();
		throw new NoSuchAttributeException("structure.Package doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("qualifiedName")) {
			set_qualifiedName((java.lang.String) data);
			return;
		}
		throw new NoSuchAttributeException("structure.Package doesn't contain an attribute " + attributeName);
	}

	public java.lang.String get_qualifiedName() {
		return _qualifiedName;
	}

	public void set_qualifiedName(java.lang.String _qualifiedName) {
		ecaAttributeChanging("qualifiedName", this._qualifiedName, _qualifiedName);
		Object oldValue = this._qualifiedName;
		this._qualifiedName = _qualifiedName;
		graphModified();
	ecaAttributeChanged("qualifiedName", oldValue, _qualifiedName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_qualifiedName = io.matchUtfString();
		set_qualifiedName(_qualifiedName);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("qualifiedName")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_qualifiedName = io.matchUtfString();
			set_qualifiedName(_qualifiedName);
			return;
		}
		throw new NoSuchAttributeException("structure.Package doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		io.writeUtfString(_qualifiedName);
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("qualifiedName")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			io.writeUtfString(_qualifiedName);
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("structure.Package doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.NamedElement getNextNamedElement() {
		return (de.uni_koblenz.jgralab.grumlschema.structure.NamedElement)getNextVertex(de.uni_koblenz.jgralab.grumlschema.structure.NamedElement.class);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.Package getNextPackage() {
		return (de.uni_koblenz.jgralab.grumlschema.structure.Package)getNextVertex(de.uni_koblenz.jgralab.grumlschema.structure.Package.class);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.Annotates getFirstAnnotatesIncidence() {
		return (de.uni_koblenz.jgralab.grumlschema.structure.Annotates)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.Annotates getFirstAnnotatesIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.grumlschema.structure.Annotates)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage getFirstContainsDefaultPackageIncidence() {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage.class);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage getFirstContainsDefaultPackageIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain getFirstContainsDomainIncidence() {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain.class);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain getFirstContainsDomainIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass getFirstContainsGraphElementClassIncidence() {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass.class);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass getFirstContainsGraphElementClassIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage getFirstContainsSubPackageIncidence() {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class);
	}

	@Override
	public de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage getFirstContainsSubPackageIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage)getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class, orientation);
	}
		@Override
		public de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage add_subpackage(de.uni_koblenz.jgralab.grumlschema.structure.Package vertex) {
			return ((de.uni_koblenz.jgralab.grumlschema.SchemaGraph)getGraph()).createEdge(de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.EC, (de.uni_koblenz.jgralab.grumlschema.structure.Package) this, (de.uni_koblenz.jgralab.grumlschema.structure.Package) vertex);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.grumlschema.structure.Package> remove_subpackage() {
			java.util.List<de.uni_koblenz.jgralab.grumlschema.structure.Package> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.grumlschema.structure.Package>();
			de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage edge = (de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage) getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage next = (de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage) edge.getNextIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class, EdgeDirection.OUT);
				adjacences.add((de.uni_koblenz.jgralab.grumlschema.structure.Package) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_subpackage(de.uni_koblenz.jgralab.grumlschema.structure.Package vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage edge = (de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage) getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class, EdgeDirection.OUT);
			while (edge != null) {
				de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage next = (de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage) edge.getNextIncidence(de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class, EdgeDirection.OUT);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralab.grumlschema.structure.Package> get_subpackage() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage, de.uni_koblenz.jgralab.grumlschema.structure.Package>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class, EdgeDirection.OUT);
		}
		@Override
		public de.uni_koblenz.jgralab.grumlschema.structure.Annotates add_comment(de.uni_koblenz.jgralab.grumlschema.structure.Comment vertex) {
			return ((de.uni_koblenz.jgralab.grumlschema.SchemaGraph)getGraph()).createEdge(de.uni_koblenz.jgralab.grumlschema.structure.Annotates.EC, (de.uni_koblenz.jgralab.grumlschema.structure.Comment) vertex, (de.uni_koblenz.jgralab.grumlschema.structure.Package) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.grumlschema.structure.Comment> remove_comment() {
			java.util.List<de.uni_koblenz.jgralab.grumlschema.structure.Comment> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.grumlschema.structure.Comment>();
			de.uni_koblenz.jgralab.grumlschema.structure.Annotates edge = (de.uni_koblenz.jgralab.grumlschema.structure.Annotates) getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.grumlschema.structure.Annotates next = (de.uni_koblenz.jgralab.grumlschema.structure.Annotates) edge.getNextIncidence(de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralab.grumlschema.structure.Comment) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_comment(de.uni_koblenz.jgralab.grumlschema.structure.Comment vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.grumlschema.structure.Annotates edge = (de.uni_koblenz.jgralab.grumlschema.structure.Annotates) getFirstIncidence(de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.grumlschema.structure.Annotates next = (de.uni_koblenz.jgralab.grumlschema.structure.Annotates) edge.getNextIncidence(de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralab.grumlschema.structure.Comment> get_comment() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralab.grumlschema.structure.Annotates, de.uni_koblenz.jgralab.grumlschema.structure.Comment>(this, de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class, EdgeDirection.IN);
		}

	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.Annotates> getAnnotatesIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.Annotates>(this, de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.Annotates> getAnnotatesIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.Annotates>(this, de.uni_koblenz.jgralab.grumlschema.structure.Annotates.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage> getContainsDefaultPackageIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage> getContainsDefaultPackageIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsDefaultPackage.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain> getContainsDomainIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain> getContainsDomainIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsDomain.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass> getContainsGraphElementClassIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass> getContainsGraphElementClassIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsGraphElementClass.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage> getContainsSubPackageIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage> getContainsSubPackageIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage>(this, de.uni_koblenz.jgralab.grumlschema.structure.ContainsSubPackage.class, direction);
	}
}
