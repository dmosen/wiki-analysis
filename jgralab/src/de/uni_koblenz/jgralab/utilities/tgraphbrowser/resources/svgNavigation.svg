<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
	"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd">
<!-- <svg width="790" height="530" version="1.1" --> 
<svg width="100%" height="100%" version="1.1" 
	xmlns="http://www.w3.org/2000/svg" 
	xmlns:xlink="http://www.w3.org/1999/xlink" 
	xmlns:jgralab="http://userpages.uni-koblenz.de/~ist/JGraLab" onload="init(evt)" onmouseup="onMouseUp(evt)">
  <defs>
    <script type='text/ecmascript'><![CDATA[
      var svgdoc, navdoc;
      
      var vbX = 0;
      var vbY = 0;
      var vbW = 0;
      var vbH = 0;
      
      // bb* contains original viewBox
      var bbX = 0;
      var bbY = 0;
      var bbW = 0;
      var bbH = 0;
      
      var debug = 0;
      
      
      function init(evt) {
        top.resize();
        svgdoc = evt.target.ownerDocument;
      
        navdoc = svgdoc.getElementById('nav');
        
        var rect = svgdoc.getElementById('rect');
        
        // initialize wheel support
        if (document.addEventListener){
        	navdoc.addEventListener("DOMMouseScroll", zoomWithScroll, false);
        }
        navdoc.onmousewheel = document.onmousewheel = zoomWithScroll;
      
        //debug = evt.getTarget().getOwnerDocument().getElementById('debug').getFirstChild();
      
        // read viewbox coords from navdoc; set to local variables
        var vbData = navdoc.getAttributeNS(null, 'viewBox').split(' ');
        bbX = parseFloat(vbData[0]);
        bbY = parseFloat(vbData[1]);
        bbW = parseFloat(vbData[2]);
        if(bbW > 1000){
        	var rectWidth = rect.getAttributeNS(null,"width");
        	bbX = bbW/2 - rectWidth/2;
        	bbW = 1000;
        }
        bbH = parseFloat(vbData[3]);
        if(bbH > 1000){
        	var rectHeight= rect.getAttributeNS(null,"height");
        	bbY = bbH/2 - rectHeight/2;
        	bbH = 1000;
        }
        
        updateViewBox(bbX, bbY, bbW, bbH);
      }
      
      
      function zoom(evt) {
        if (evt.target.parentNode.getAttributeNS(null, 'id') == 'ZIn') {
          //debug.setData('ZIn!');
          zoomIn();
        }
        else if (evt.target.parentNode.getAttributeNS(null, 'id') == 'ZOut') {
          //debug.setData('ZOut!');
          zoomOut();
        }
        else if (evt.target.parentNode.getAttributeNS(null, 'id') == 'ZGraph') {
          updateViewBox(bbX, bbY, bbW, bbH);
          //debug.setData('ZGraph!');
        }
      }
      
      function zoomIn(){
    	  vbW *= 0.7;
          vbH *= 0.7;
          updateViewBox(vbX, vbY, vbW, vbH);
      }
      
      function zoomOut(){
    	  vbW *= 1.3;
          vbH *= 1.3;
          updateViewBox(vbX, vbY, vbW, vbH);
      }
      
      
      function updateViewBox(x, y, w, h) {
        vbX = x;
        vbY = y;
        vbW = w;
        vbH = h;
        navdoc.setAttributeNS(null, 'viewBox', x + ' ' + y + ' ' + w + ' ' + h);
        //debug.setData(navdoc.getAttribute('viewBox'));
      }
      
      
      function goLeft(evt) {
        vbX -= 50;
        navdoc.setAttributeNS(null, 'viewBox', vbX + ' ' + vbY + ' ' + vbW + ' ' + vbH);
      }
      function goRight(evt) {
        vbX += 50;
        navdoc.setAttributeNS(null, 'viewBox', vbX + ' ' + vbY + ' ' + vbW + ' ' + vbH);
      }
      function goUp(evt) {
        vbY -= 50;
        navdoc.setAttributeNS(null, 'viewBox', vbX + ' ' + vbY + ' ' + vbW + ' ' + vbH);
      }
      function goDown(evt) {
        vbY += 50;
        navdoc.setAttributeNS(null, 'viewBox', vbX + ' ' + vbY + ' ' + vbW + ' ' + vbH);
      }
      
      // move picture with coursor
      var oldCursorPosX, oldCursorPosY;
      
      function onMouseDown(evt){
    	  if(evt.which?evt.which==1:evt.button==0){
        	  navdoc.setAttributeNS(null, "onmousemove", "onMouseMove(evt);")
    		  oldCursorPosX = evt.screenX;
    		  oldCursorPosY = evt.screenY;
    	  }
      }
      
      function onMouseUp(evt){
    	  if(evt.which?evt.which==1:evt.button==0){
        	  navdoc.setAttributeNS(null, "onmousemove", "")
    	  }
      }
      
      function onMouseMove(evt){
    	  vbX += oldCursorPosX - evt.screenX;
    	  vbY += oldCursorPosY - evt.screenY;
    	  navdoc.setAttributeNS(null, 'viewBox', vbX + ' ' + vbY + ' ' + vbW + ' ' + vbH);
    	  oldCursorPosX = evt.screenX;
    	  oldCursorPosY = evt.screenY;
      }
      
      // zoom via mousewheel
      
      function zoomWithScroll(evt){
    	  var direction = 0;
    	  if (!evt){
    		  evt = window.event;
    	  }
    	  if (evt.wheelDelta){
    		  direction = evt.wheelDelta/120;
    		  if (window.opera){
    			  direction = -direction;
    		  }
    	  } else if (evt.detail) {
    		  direction = -evt.detail/3;
    	  }
    	  if (direction){
    		  zoomWheel(direction);
    	  }
      }
      
      function zoomWheel(direction) {
    	  if (direction < 0){
    	  	zoomIn();
    	  }else{
    	  	zoomOut();
    	  }
      }

    ]]></script>
  </defs>
  <g transform="translate(43, 150)" stroke='black' fill='lightgrey'>
    <path d="M -35   0 l +15 -15 l   0 +30 z" id="left" onclick='goLeft(evt)'/>
    <path d="M  35   0 l -15 -15 l   0 +30 z" id="right" onclick='goRight(evt)'/>
    <path d="M   0 -35 l +15 +15 l -30   0 z" id="up" onclick='goUp(evt)'/>
    <path d="M   0  35 l +15 -15 l -30   0 z" id="down" onclick='goDown(evt)'/>
  </g>
  <g id="ZoomControl" transform="translate(45, 20)" >
    <text text-anchor='middle'>Zoom:</text> 
    <g id='ZIn' onclick='zoom(evt)'> 
      <rect x='-40' y='6' width='80' height='20' fill='lightgrey' stroke='black'/> 
      <text y='21' text-anchor='middle'>in</text> 
    </g> 
    <g id='ZOut' onclick='zoom(evt)'> 
      <rect x='-40' y='28' width='80' height='20' fill='lightgrey' stroke='black'/> 
      <text y='43' text-anchor='middle'>out</text> 
    </g> 
    <g id='ZGraph' onclick='zoom(evt)'> 
      <rect x='-40' y='50' width='80' height='20' fill='lightgrey' stroke='black'/> 
      <text y='65' text-anchor='middle'>Graph</text> 
    </g>
  </g>
  <rect id="rect" x="90" y="1" width="640" height="480" style="fill:rgb(50,50,50);stroke:rgb(0,0,0);" />
  <svg id="nav" width="638" height="478" version="1.1" viewBox="?viewBox?" xmlns="http://www.w3.org/2000/svg" x="91" y="2" onmousedown="onMouseDown(evt);" >
   <!--  -->
  </svg>
</svg>
