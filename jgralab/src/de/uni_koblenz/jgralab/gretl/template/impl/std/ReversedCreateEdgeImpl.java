/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.gretl.template.impl.std;

import de.uni_koblenz.jgralab.impl.std.ReversedEdgeImpl;
import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.Graph;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import de.uni_koblenz.jgralab.gretl.template.CreateVertex;

import java.io.IOException;

public class ReversedCreateEdgeImpl extends ReversedEdgeImpl implements de.uni_koblenz.jgralab.gretl.template.CreateEdge, de.uni_koblenz.jgralab.Edge {

	ReversedCreateEdgeImpl(EdgeImpl e, Graph g) {
		super(e, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return getNormalEdge().getAttributedElementClass();
	}

	public java.lang.String get_archetype() {
		return ((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).get_archetype();
	}

	public void set_archetype(java.lang.String _archetype) {
		((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).set_archetype(_archetype);
	}

	public org.pcollections.PMap<java.lang.String, java.lang.String> get_attributes() {
		return ((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).get_attributes();
	}

	public void set_attributes(org.pcollections.PMap<java.lang.String, java.lang.String> _attributes) {
		((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).set_attributes(_attributes);
	}

	public boolean is_copyAttributeValues() {
		return ((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).is_copyAttributeValues();
	}

	public void set_copyAttributeValues(boolean _copyAttributeValues) {
		((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).set_copyAttributeValues(_copyAttributeValues);
	}

	public java.lang.String get_typeName() {
		return ((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).get_typeName();
	}

	public void set_typeName(java.lang.String _typeName) {
		((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).set_typeName(_typeName);
	}

	public boolean is_typeNameIsQuery() {
		return ((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).is_typeNameIsQuery();
	}

	public void set_typeNameIsQuery(boolean _typeNameIsQuery) {
		((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).set_typeNameIsQuery(_typeNameIsQuery);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValues for reversed Edges.");
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValuesFromString for reversed Edges.");
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		throw new GraphIOException("Can not call writeAttributeValues for reversed Edges.");
	}

	public String writeAttributeValueToString(String _attributeName) throws IOException, GraphIOException {
		throw new GraphIOException("Can not call writeAttributeValueToString for reversed Edges.");
	}

	public de.uni_koblenz.jgralab.gretl.template.CreateEdge getNextCreateEdgeInGraph() {
		return ((de.uni_koblenz.jgralab.gretl.template.CreateEdge)normalEdge).getNextCreateEdgeInGraph();
	}

	public de.uni_koblenz.jgralab.gretl.template.CreateEdge getNextCreateEdgeIncidence() {
		return (de.uni_koblenz.jgralab.gretl.template.CreateEdge)getNextIncidence(de.uni_koblenz.jgralab.gretl.template.CreateEdge.class);
	}

	public de.uni_koblenz.jgralab.gretl.template.CreateEdge getNextCreateEdgeIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.gretl.template.CreateEdge)getNextIncidence(de.uni_koblenz.jgralab.gretl.template.CreateEdge.class, orientation);
	}
	public CreateVertex getAlpha() {
		return (CreateVertex) super.getAlpha();
	}
	public CreateVertex getOmega() {
		return (CreateVertex) super.getOmega();
	}
}
