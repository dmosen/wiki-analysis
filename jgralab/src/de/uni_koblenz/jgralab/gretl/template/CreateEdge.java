/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.gretl.template;

import de.uni_koblenz.jgralab.EdgeDirection;

import de.uni_koblenz.jgralab.gretl.template.CreateVertex;
/**
 * FromVertexClass: CreateVertex
 * FromRoleName : src
 * ToVertexClass: CreateVertex
 * ToRoleName : dst
 */

public interface CreateEdge extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = de.uni_koblenz.jgralab.gretl.template.TemplateSchema.instance().ec_CreateEdge;

	public java.lang.String get_archetype();

	public void set_archetype(java.lang.String _archetype);

	public org.pcollections.PMap<java.lang.String, java.lang.String> get_attributes();

	public void set_attributes(org.pcollections.PMap<java.lang.String, java.lang.String> _attributes);

	public boolean is_copyAttributeValues();

	public void set_copyAttributeValues(boolean _copyAttributeValues);

	public java.lang.String get_typeName();

	public void set_typeName(java.lang.String _typeName);

	public boolean is_typeNameIsQuery();

	public void set_typeNameIsQuery(boolean _typeNameIsQuery);

	/**
	 * @return the next de.uni_koblenz.jgralab.gretl.template.CreateEdge edge in the global edge sequence
	 */
	public de.uni_koblenz.jgralab.gretl.template.CreateEdge getNextCreateEdgeInGraph();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralab.gretl.template.CreateEdge at the "this" vertex
	 */
	public de.uni_koblenz.jgralab.gretl.template.CreateEdge getNextCreateEdgeIncidence();

	/**
	 * @return the next edge of class de.uni_koblenz.jgralab.gretl.template.CreateEdge at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralab.gretl.template.CreateEdge getNextCreateEdgeIncidence(EdgeDirection orientation);
	public CreateVertex getAlpha();
	public CreateVertex getOmega();
}
