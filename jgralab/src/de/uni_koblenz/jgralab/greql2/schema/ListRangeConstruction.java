/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema;

import de.uni_koblenz.jgralab.EdgeDirection;

public interface ListRangeConstruction extends de.uni_koblenz.jgralab.greql2.schema.ListConstruction {

	public static final de.uni_koblenz.jgralab.schema.VertexClass VC = de.uni_koblenz.jgralab.greql2.schema.Greql2Schema.instance().vc_ListRangeConstruction;

	/**
	 * @return the next de.uni_koblenz.jgralab.greql2.schema.Expression vertex in the global vertex sequence
	 */
	public de.uni_koblenz.jgralab.greql2.schema.Expression getNextExpression();

	/**
	 * @return the next de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex vertex in the global vertex sequence
	 */
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex getNextGreql2Vertex();

	/**
	 * @return the next de.uni_koblenz.jgralab.greql2.schema.ListConstruction vertex in the global vertex sequence
	 */
	public de.uni_koblenz.jgralab.greql2.schema.ListConstruction getNextListConstruction();

	/**
	 * @return the next de.uni_koblenz.jgralab.greql2.schema.ListRangeConstruction vertex in the global vertex sequence
	 */
	public de.uni_koblenz.jgralab.greql2.schema.ListRangeConstruction getNextListRangeConstruction();

	/**
	 * @return the next de.uni_koblenz.jgralab.greql2.schema.ValueConstruction vertex in the global vertex sequence
	 */
	public de.uni_koblenz.jgralab.greql2.schema.ValueConstruction getNextValueConstruction();

	/**
	 * @return the first edge of class IsLastValueOf at this vertex
	 */
	public de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf getFirstIsLastValueOfIncidence();

	/**
	 * @return the first edge of class IsLastValueOf at this vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf getFirstIsLastValueOfIncidence(EdgeDirection orientation);

	/**
	 * @return the first edge of class IsFirstValueOf at this vertex
	 */
	public de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf getFirstIsFirstValueOfIncidence();

	/**
	 * @return the first edge of class IsFirstValueOf at this vertex
	 * @param orientation the orientation of the edge
	 */
	public de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf getFirstIsFirstValueOfIncidence(EdgeDirection orientation);
		/**
		 * adds the given vertex as <code>typeRestr</code> to this vertex, i.e. creates an
		 * <code>de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfExpression</code> edge from this vertex to the given 
		 * one and returns the created edge.
		 * @return  a newly created edge of type <code>de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfExpression</code>
		 *          between this vertex and the given one.
		 */
		public de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfExpression add_typeRestr(de.uni_koblenz.jgralab.greql2.schema.TypeId vertex);
		/**
		 * removes all typeRestr adjacences to all vertices by 
		 * deleting the <code>de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfExpression</code> edges of this vertex to 
		 * all other ones, but doesn't delete those vertices.
		 *
		 * @return the adjacent vertices prior to removal of incidences
		 */
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.TypeId> remove_typeRestr();
		/**
		 * removes the given vertex as <code>typeRestr</code> from this vertex, i.e. 
		 * deletes the <code>de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfExpression</code> edge connections of this vertex with 
		 * the given one.
		 */
		public boolean remove_typeRestr(de.uni_koblenz.jgralab.greql2.schema.TypeId vertex);
		/**
		 * @return an Iterable of all vertices adjacent to this one with the rolename 'typeRestr'
		 *         (connected with a <code>de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfExpression</code> edge).
		 */
		public Iterable<? extends de.uni_koblenz.jgralab.greql2.schema.TypeId> get_typeRestr();
		/**
		 * adds the given vertex as <code>lastValue</code> to this vertex, i.e. creates an
		 * <code>de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf</code> edge from this vertex to the given 
		 * one and returns the created edge.
		 * @return  a newly created edge of type <code>de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf</code>
		 *          between this vertex and the given one.
		 */
		public de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf add_lastValue(de.uni_koblenz.jgralab.greql2.schema.Expression vertex);
		/**
		 * removes all lastValue adjacences to all vertices by 
		 * deleting the <code>de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf</code> edges of this vertex to 
		 * all other ones, but doesn't delete those vertices.
		 *
		 * @return the adjacent vertices prior to removal of incidences
		 */
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.Expression> remove_lastValue();
		/**
		 * removes the given vertex as <code>lastValue</code> from this vertex, i.e. 
		 * deletes the <code>de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf</code> edge connections of this vertex with 
		 * the given one.
		 */
		public boolean remove_lastValue(de.uni_koblenz.jgralab.greql2.schema.Expression vertex);
		/**
		 * @return the vertex to this one with the rolename 'lastValue' 
		 *         (connected with a <code>de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf</code> edge), or null if no such vertex exists
		 */
		public de.uni_koblenz.jgralab.greql2.schema.Expression get_lastValue();
		/**
		 * adds the given vertex as <code>part</code> to this vertex, i.e. creates an
		 * <code>de.uni_koblenz.jgralab.greql2.schema.IsPartOf</code> edge from this vertex to the given 
		 * one and returns the created edge.
		 * @return  a newly created edge of type <code>de.uni_koblenz.jgralab.greql2.schema.IsPartOf</code>
		 *          between this vertex and the given one.
		 */
		public de.uni_koblenz.jgralab.greql2.schema.IsPartOf add_part(de.uni_koblenz.jgralab.greql2.schema.Expression vertex);
		/**
		 * removes all part adjacences to all vertices by 
		 * deleting the <code>de.uni_koblenz.jgralab.greql2.schema.IsPartOf</code> edges of this vertex to 
		 * all other ones, but doesn't delete those vertices.
		 *
		 * @return the adjacent vertices prior to removal of incidences
		 */
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.Expression> remove_part();
		/**
		 * removes the given vertex as <code>part</code> from this vertex, i.e. 
		 * deletes the <code>de.uni_koblenz.jgralab.greql2.schema.IsPartOf</code> edge connections of this vertex with 
		 * the given one.
		 */
		public boolean remove_part(de.uni_koblenz.jgralab.greql2.schema.Expression vertex);
		/**
		 * @return an Iterable of all vertices adjacent to this one with the rolename 'part'
		 *         (connected with a <code>de.uni_koblenz.jgralab.greql2.schema.IsPartOf</code> edge).
		 */
		public Iterable<? extends de.uni_koblenz.jgralab.greql2.schema.Expression> get_part();
		/**
		 * adds the given vertex as <code>firstValue</code> to this vertex, i.e. creates an
		 * <code>de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf</code> edge from this vertex to the given 
		 * one and returns the created edge.
		 * @return  a newly created edge of type <code>de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf</code>
		 *          between this vertex and the given one.
		 */
		public de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf add_firstValue(de.uni_koblenz.jgralab.greql2.schema.Expression vertex);
		/**
		 * removes all firstValue adjacences to all vertices by 
		 * deleting the <code>de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf</code> edges of this vertex to 
		 * all other ones, but doesn't delete those vertices.
		 *
		 * @return the adjacent vertices prior to removal of incidences
		 */
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.Expression> remove_firstValue();
		/**
		 * removes the given vertex as <code>firstValue</code> from this vertex, i.e. 
		 * deletes the <code>de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf</code> edge connections of this vertex with 
		 * the given one.
		 */
		public boolean remove_firstValue(de.uni_koblenz.jgralab.greql2.schema.Expression vertex);
		/**
		 * @return the vertex to this one with the rolename 'firstValue' 
		 *         (connected with a <code>de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf</code> edge), or null if no such vertex exists
		 */
		public de.uni_koblenz.jgralab.greql2.schema.Expression get_firstValue();

	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsLastValueOf or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf> getIsLastValueOfIncidences();
	
	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsLastValueOf.
	 * @param direction EdgeDirection.IN or EdgeDirection.OUT, only edges of this direction will be included in the Iterable
	 */
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsLastValueOf> getIsLastValueOfIncidences(EdgeDirection direction);

	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsFirstValueOf or subtypes.
	 */
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf> getIsFirstValueOfIncidences();
	
	/**
	 * Returns an Iterable for all incidence edges of this vertex that are of type IsFirstValueOf.
	 * @param direction EdgeDirection.IN or EdgeDirection.OUT, only edges of this direction will be included in the Iterable
	 */
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsFirstValueOf> getIsFirstValueOfIncidences(EdgeDirection direction);
}
