/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema.impl.std;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class EdgeRestrictionImpl extends VertexImpl implements de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction, de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex {

	public EdgeRestrictionImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction.class;
	}

	public <T> T getAttribute(String attributeName) {
		throw new NoSuchAttributeException("EdgeRestriction doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		throw new NoSuchAttributeException("EdgeRestriction doesn't contain an attribute " + attributeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new NoSuchAttributeException("EdgeRestriction doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		throw new NoSuchAttributeException("EdgeRestriction doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction getNextEdgeRestriction() {
		return (de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex getNextGreql2Vertex() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf getFirstIsEdgeRestrOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf getFirstIsEdgeRestrOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction getFirstIsBooleanPredicateOfEdgeRestrictionIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction getFirstIsBooleanPredicateOfEdgeRestrictionIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf getFirstIsRoleIdOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf getFirstIsRoleIdOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf getFirstIsTypeIdOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf getFirstIsTypeIdOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, orientation);
	}
		@Override
		public de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf add_typeId(de.uni_koblenz.jgralab.greql2.schema.TypeId vertex) {
			return ((de.uni_koblenz.jgralab.greql2.schema.Greql2)getGraph()).createEdge(de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.EC, (de.uni_koblenz.jgralab.greql2.schema.TypeId) vertex, (de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.TypeId> remove_typeId() {
			java.util.List<de.uni_koblenz.jgralab.greql2.schema.TypeId> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.greql2.schema.TypeId>();
			de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf next = (de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralab.greql2.schema.TypeId) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_typeId(de.uni_koblenz.jgralab.greql2.schema.TypeId vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf next = (de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralab.greql2.schema.TypeId> get_typeId() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf, de.uni_koblenz.jgralab.greql2.schema.TypeId>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class, EdgeDirection.IN);
		}
		@Override
		public de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf add_roleId(de.uni_koblenz.jgralab.greql2.schema.RoleId vertex) {
			return ((de.uni_koblenz.jgralab.greql2.schema.Greql2)getGraph()).createEdge(de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.EC, (de.uni_koblenz.jgralab.greql2.schema.RoleId) vertex, (de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.RoleId> remove_roleId() {
			java.util.List<de.uni_koblenz.jgralab.greql2.schema.RoleId> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.greql2.schema.RoleId>();
			de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf next = (de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralab.greql2.schema.RoleId) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_roleId(de.uni_koblenz.jgralab.greql2.schema.RoleId vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf next = (de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralab.greql2.schema.RoleId> get_roleId() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf, de.uni_koblenz.jgralab.greql2.schema.RoleId>(this, de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class, EdgeDirection.IN);
		}
		@Override
		public de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction add_booleanPredicate(de.uni_koblenz.jgralab.greql2.schema.Expression vertex) {
			return ((de.uni_koblenz.jgralab.greql2.schema.Greql2)getGraph()).createEdge(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.EC, (de.uni_koblenz.jgralab.greql2.schema.Expression) vertex, (de.uni_koblenz.jgralab.greql2.schema.EdgeRestriction) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.Expression> remove_booleanPredicate() {
			java.util.List<de.uni_koblenz.jgralab.greql2.schema.Expression> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.greql2.schema.Expression>();
			de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction edge = (de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction next = (de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralab.greql2.schema.Expression) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_booleanPredicate(de.uni_koblenz.jgralab.greql2.schema.Expression vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction edge = (de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction next = (de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public de.uni_koblenz.jgralab.greql2.schema.Expression get_booleanPredicate() {
			de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction edge = (de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class, EdgeDirection.IN);
			if (edge != null) {
				return (de.uni_koblenz.jgralab.greql2.schema.Expression) edge.getThat();
			}
			return null;
		}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf> getIsEdgeRestrOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf> getIsEdgeRestrOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsEdgeRestrOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction> getIsBooleanPredicateOfEdgeRestrictionIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction>(this, de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction> getIsBooleanPredicateOfEdgeRestrictionIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction>(this, de.uni_koblenz.jgralab.greql2.schema.IsBooleanPredicateOfEdgeRestriction.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf> getIsRoleIdOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf> getIsRoleIdOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsRoleIdOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf> getIsTypeIdOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf> getIsTypeIdOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeIdOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, direction);
	}
}
