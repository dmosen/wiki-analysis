/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema.impl.std;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class EdgeTypeSubgraphImpl extends VertexImpl implements de.uni_koblenz.jgralab.greql2.schema.EdgeTypeSubgraph, de.uni_koblenz.jgralab.greql2.schema.SubgraphDefinition {

	public EdgeTypeSubgraphImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralab.greql2.schema.EdgeTypeSubgraph.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralab.greql2.schema.EdgeTypeSubgraph.class;
	}

	public <T> T getAttribute(String attributeName) {
		throw new NoSuchAttributeException("EdgeTypeSubgraph doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		throw new NoSuchAttributeException("EdgeTypeSubgraph doesn't contain an attribute " + attributeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new NoSuchAttributeException("EdgeTypeSubgraph doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		throw new NoSuchAttributeException("EdgeTypeSubgraph doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.EdgeTypeSubgraph getNextEdgeTypeSubgraph() {
		return (de.uni_koblenz.jgralab.greql2.schema.EdgeTypeSubgraph)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.EdgeTypeSubgraph.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex getNextGreql2Vertex() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.SubgraphDefinition getNextSubgraphDefinition() {
		return (de.uni_koblenz.jgralab.greql2.schema.SubgraphDefinition)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.SubgraphDefinition.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf getFirstIsSubgraphDefinitionOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf getFirstIsSubgraphDefinitionOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph getFirstIsTypeRestrOfSubgraphIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph getFirstIsTypeRestrOfSubgraphIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, orientation);
	}
		@Override
		public de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph add_typeRestr(de.uni_koblenz.jgralab.greql2.schema.TypeId vertex) {
			return ((de.uni_koblenz.jgralab.greql2.schema.Greql2)getGraph()).createEdge(de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.EC, (de.uni_koblenz.jgralab.greql2.schema.TypeId) vertex, (de.uni_koblenz.jgralab.greql2.schema.EdgeTypeSubgraph) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.TypeId> remove_typeRestr() {
			java.util.List<de.uni_koblenz.jgralab.greql2.schema.TypeId> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.greql2.schema.TypeId>();
			de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph edge = (de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph next = (de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralab.greql2.schema.TypeId) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_typeRestr(de.uni_koblenz.jgralab.greql2.schema.TypeId vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph edge = (de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph next = (de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralab.greql2.schema.TypeId> get_typeRestr() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph, de.uni_koblenz.jgralab.greql2.schema.TypeId>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class, EdgeDirection.IN);
		}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf> getIsSubgraphDefinitionOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf> getIsSubgraphDefinitionOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsSubgraphDefinitionOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph> getIsTypeRestrOfSubgraphIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph> getIsTypeRestrOfSubgraphIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeRestrOfSubgraph.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, direction);
	}
}
