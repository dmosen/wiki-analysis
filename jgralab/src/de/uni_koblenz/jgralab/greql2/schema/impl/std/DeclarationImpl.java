/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema.impl.std;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class DeclarationImpl extends VertexImpl implements de.uni_koblenz.jgralab.greql2.schema.Declaration, de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex {

	public DeclarationImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralab.greql2.schema.Declaration.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralab.greql2.schema.Declaration.class;
	}

	public <T> T getAttribute(String attributeName) {
		throw new NoSuchAttributeException("Declaration doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		throw new NoSuchAttributeException("Declaration doesn't contain an attribute " + attributeName);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new NoSuchAttributeException("Declaration doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		throw new NoSuchAttributeException("Declaration doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Declaration getNextDeclaration() {
		return (de.uni_koblenz.jgralab.greql2.schema.Declaration)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.Declaration.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex getNextGreql2Vertex() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf getFirstIsCompDeclOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf getFirstIsCompDeclOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf getFirstIsQuantifiedDeclOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf getFirstIsQuantifiedDeclOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf getFirstIsSimpleDeclOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf getFirstIsSimpleDeclOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf getFirstIsConstraintOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf getFirstIsConstraintOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, orientation);
	}
		@Override
		public de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf add_constraint(de.uni_koblenz.jgralab.greql2.schema.Expression vertex) {
			return ((de.uni_koblenz.jgralab.greql2.schema.Greql2)getGraph()).createEdge(de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.EC, (de.uni_koblenz.jgralab.greql2.schema.Expression) vertex, (de.uni_koblenz.jgralab.greql2.schema.Declaration) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.Expression> remove_constraint() {
			java.util.List<de.uni_koblenz.jgralab.greql2.schema.Expression> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.greql2.schema.Expression>();
			de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf next = (de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralab.greql2.schema.Expression) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_constraint(de.uni_koblenz.jgralab.greql2.schema.Expression vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf next = (de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralab.greql2.schema.Expression> get_constraint() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf, de.uni_koblenz.jgralab.greql2.schema.Expression>(this, de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class, EdgeDirection.IN);
		}
		@Override
		public de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf add_simpleDecl(de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration vertex) {
			return ((de.uni_koblenz.jgralab.greql2.schema.Greql2)getGraph()).createEdge(de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.EC, (de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration) vertex, (de.uni_koblenz.jgralab.greql2.schema.Declaration) this);
		}
		@Override
		public java.util.List<? extends de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration> remove_simpleDecl() {
			java.util.List<de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration> adjacences = new java.util.ArrayList<de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration>();
			de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf next = (de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class, EdgeDirection.IN);
				adjacences.add((de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration) edge.getThat());
				edge.delete();
				edge = next;
			}
			return adjacences;
		}
		@Override
		public boolean remove_simpleDecl(de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration vertex) {
			boolean elementRemoved = false;
			de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf edge = (de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf) getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class, EdgeDirection.IN);
			while (edge != null) {
				de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf next = (de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf) edge.getNextIncidence(de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class, EdgeDirection.IN);
				if (edge.getThat().equals(vertex)) {			edge.delete();
					elementRemoved = true;
				}
				edge = next;
			}
			return elementRemoved;
		}
		@Override
		public Iterable<? extends de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration> get_simpleDecl() {
			return new de.uni_koblenz.jgralab.impl.NeighbourIterable<de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf, de.uni_koblenz.jgralab.greql2.schema.SimpleDeclaration>(this, de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class, EdgeDirection.IN);
		}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf> getIsCompDeclOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf> getIsCompDeclOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsCompDeclOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf> getIsQuantifiedDeclOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf> getIsQuantifiedDeclOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsQuantifiedDeclOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf> getIsSimpleDeclOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf> getIsSimpleDeclOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsSimpleDeclOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf> getIsConstraintOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf> getIsConstraintOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsConstraintOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, direction);
	}
}
