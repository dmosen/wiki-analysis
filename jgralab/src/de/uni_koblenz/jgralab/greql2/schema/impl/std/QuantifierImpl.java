/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema.impl.std;

import de.uni_koblenz.jgralab.impl.IncidenceIterable;

import de.uni_koblenz.jgralab.impl.std.VertexImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;
import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;

public class QuantifierImpl extends VertexImpl implements de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex, de.uni_koblenz.jgralab.greql2.schema.Quantifier {

	protected de.uni_koblenz.jgralab.greql2.schema.QuantificationType _type;

	public QuantifierImpl(int id, de.uni_koblenz.jgralab.Graph g) {
		super(id, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.VertexClass getAttributedElementClass() {
		return de.uni_koblenz.jgralab.greql2.schema.Quantifier.VC;
	}

	@Override
	public final java.lang.Class<? extends de.uni_koblenz.jgralab.Vertex> getSchemaClass() {
		return de.uni_koblenz.jgralab.greql2.schema.Quantifier.class;
	}

	@SuppressWarnings("unchecked")
	public <T> T getAttribute(String attributeName) {
		if (attributeName.equals("type")) return (T) get_type();
		throw new NoSuchAttributeException("Quantifier doesn't contain an attribute " + attributeName);
	}

	public <T> void setAttribute(String attributeName, T data) {
		if (attributeName.equals("type")) {
			if (data instanceof String) {
				set_type(de.uni_koblenz.jgralab.greql2.schema.QuantificationType.valueOfPermitNull((String) data));
			} else {
				set_type((de.uni_koblenz.jgralab.greql2.schema.QuantificationType) data);
			}
			return;
		}
		throw new NoSuchAttributeException("Quantifier doesn't contain an attribute " + attributeName);
	}

	public de.uni_koblenz.jgralab.greql2.schema.QuantificationType get_type() {
		return _type;
	}

	public void set_type(de.uni_koblenz.jgralab.greql2.schema.QuantificationType _type) {
		ecaAttributeChanging("type", this._type, _type);
		Object oldValue = this._type;
		this._type = _type;
		graphModified();
	ecaAttributeChanged("type", oldValue, _type);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		_type = de.uni_koblenz.jgralab.greql2.schema.QuantificationType.valueOfPermitNull(io.matchEnumConstant());
		set_type(_type);
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		if (attributeName.equals("type")) {
			GraphIO io = GraphIO.createStringReader(value, getSchema());
			_type = de.uni_koblenz.jgralab.greql2.schema.QuantificationType.valueOfPermitNull(io.matchEnumConstant());
			set_type(_type);
			return;
		}
		throw new NoSuchAttributeException("Quantifier doesn't contain an attribute " + attributeName);
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		io.space();
		if (_type != null) {
			io.writeIdentifier(_type.toString());
		} else {
			io.writeIdentifier(GraphIO.NULL_LITERAL);
		}
	}

	public String writeAttributeValueToString(String attributeName) throws IOException, GraphIOException {
		if (attributeName.equals("type")) {
			GraphIO io = GraphIO.createStringWriter(getSchema());
			if (_type != null) {
				io.writeIdentifier(_type.toString());
			} else {
				io.writeIdentifier(GraphIO.NULL_LITERAL);
			}
			return io.getStringWriterResult();
		}
		throw new NoSuchAttributeException("Quantifier doesn't contain an attribute " + attributeName);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex getNextGreql2Vertex() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.Greql2Vertex.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Quantifier getNextQuantifier() {
		return (de.uni_koblenz.jgralab.greql2.schema.Quantifier)getNextVertex(de.uni_koblenz.jgralab.greql2.schema.Quantifier.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf getFirstIsTypeExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf getFirstIsQuantifierOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf getFirstIsQuantifierOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf getFirstIsBoundExprOfIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, orientation);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence() {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}

	@Override
	public de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation getFirstGreql2AggregationIncidence(EdgeDirection orientation) {
		return (de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation)getFirstIncidence(de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, orientation);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf> getIsTypeExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsTypeExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf> getIsQuantifierOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf> getIsQuantifierOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsQuantifierOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf> getIsBoundExprOfIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf>(this, de.uni_koblenz.jgralab.greql2.schema.IsBoundExprOf.class, direction);
	}

	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences() {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class);
	}
	
	@Override
	public Iterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation> getGreql2AggregationIncidences(EdgeDirection direction) {
		return new IncidenceIterable<de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation>(this, de.uni_koblenz.jgralab.greql2.schema.Greql2Aggregation.class, direction);
	}
}
