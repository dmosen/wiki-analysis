/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package de.uni_koblenz.jgralab.greql2.schema;

import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import de.uni_koblenz.jgralab.NoSuchAttributeException;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class SourcePosition implements de.uni_koblenz.jgralab.Record {
	private static List<String> componentNames = new ArrayList<String>(2);

	static {
		componentNames.add("length");
		componentNames.add("offset");
		componentNames = Collections.unmodifiableList(componentNames);
	}

	@Override
	public List<String> getComponentNames() {
		return componentNames;
	}

	@Override
	public boolean hasComponent(String name) {
		return componentNames.contains(name);
	}

	@Override
public int size() {
	return 2;
}

	private final int _length;

	private final int _offset;

	public SourcePosition(int _length, int _offset) {
		this._length = _length;
		this._offset = _offset;
	}
	
	public SourcePosition(java.util.Map<String, Object> componentValues) {
		assert componentValues.size() == 2;
		assert componentValues.containsKey("length");
		_length = (java.lang.Integer)componentValues.get("length");
		assert componentValues.containsKey("offset");
		_offset = (java.lang.Integer)componentValues.get("offset");
	}

	public SourcePosition(GraphIO io) throws GraphIOException {
		io.match("(");
		_length = io.matchInteger();
		_offset = io.matchInteger();
		io.match(")");
	}

	public int get_length() {
		return _length;
	}

	public int get_offset() {
		return _offset;
	}

	@Override
	public Object getComponent(String name) {
		if (name.equals("length")) {
			return _length;
		}
		if (name.equals("offset")) {
			return _offset;
		}
		throw new NoSuchAttributeException("SourcePosition doesn't contain an attribute " + name);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		String lengthString;
		lengthString = String.valueOf(_length);;
		sb.append("[").append("length").append("=").append(lengthString);
		String offsetString;
		offsetString = String.valueOf(_offset);;
		sb.append(", ").append("offset").append("=").append(offsetString);
		return sb.append("]").toString();
	}

	@Override
	public void writeComponentValues(GraphIO io) throws IOException, GraphIOException {
		io.writeSpace();
		io.write("(");
		io.noSpace();
		io.writeInteger(_length);
		io.writeInteger(_offset);
		io.write(")");
	}
	public org.pcollections.PMap<String, Object> toPMap() {
		org.pcollections.PMap<String, Object> m = de.uni_koblenz.jgralab.JGraLab.map();
		m = m.plus("length", _length);
		m = m.plus("offset", _offset);
		return m;
	}

	@Override
	public boolean equals(Object o) {
		if (o == null) {
			return false;
		}
		if (o instanceof SourcePosition) {
			SourcePosition rec = (SourcePosition) o;
			if (_length != rec._length) {
				return false;
			}
			if (_offset != rec._offset) {
				return false;
			}
			return true;
		}
		if (o instanceof de.uni_koblenz.jgralab.Record) {
			de.uni_koblenz.jgralab.Record rec = (de.uni_koblenz.jgralab.Record) o;
			if (rec.size() != 2) {
				return false;
			}
			try {
				if (!rec.getComponent("length").equals(_length)) {
					return false;
				}
				if (!rec.getComponent("offset").equals(_offset)) {
					return false;
				}
				return true;
			} catch (NoSuchAttributeException e) {
				return false;
			}
		}
		return false;
	}

	@Override
	public int hashCode() {
		int h = 0;
		h += ((java.lang.Integer) _length).hashCode();
		h += ((java.lang.Integer) _offset).hashCode();
		return h;
	}
}
