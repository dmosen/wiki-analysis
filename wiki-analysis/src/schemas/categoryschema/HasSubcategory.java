/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package schemas.categoryschema;

import de.uni_koblenz.jgralab.EdgeDirection;

import schemas.categoryschema.Category;
/**
 * FromVertexClass: Category
 * FromRoleName : category
 * ToVertexClass: Category
 * ToRoleName : subcategory
 */

public interface HasSubcategory extends de.uni_koblenz.jgralab.Edge {

	public static final de.uni_koblenz.jgralab.schema.EdgeClass EC = schemas.categoryschema.CategorySchema.instance().ec_HasSubcategory;

	public boolean is_backwardArc();

	public void set_backwardArc(boolean _backwardArc);

	public boolean is_blacklisted();

	public void set_blacklisted(boolean _blacklisted);

	public java.lang.String get_comment();

	public void set_comment(java.lang.String _comment);

	public boolean is_excluded();

	public void set_excluded(boolean _excluded);

	/**
	 * @return the next schemas.categoryschema.HasSubcategory edge in the global edge sequence
	 */
	public schemas.categoryschema.HasSubcategory getNextHasSubcategoryInGraph();

	/**
	 * @return the next edge of class schemas.categoryschema.HasSubcategory at the "this" vertex
	 */
	public schemas.categoryschema.HasSubcategory getNextHasSubcategoryIncidence();

	/**
	 * @return the next edge of class schemas.categoryschema.HasSubcategory at the "this" vertex
	 * @param orientation the orientation of the edge
	 */
	public schemas.categoryschema.HasSubcategory getNextHasSubcategoryIncidence(EdgeDirection orientation);
	public Category getAlpha();
	public Category getOmega();
}
