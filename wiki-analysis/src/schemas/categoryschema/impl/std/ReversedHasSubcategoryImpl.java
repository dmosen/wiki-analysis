/*
 * This code was generated automatically.
 * Do NOT edit this file, changes will be lost.
 * Instead, change and commit the underlying schema.
 */

package schemas.categoryschema.impl.std;

import de.uni_koblenz.jgralab.impl.std.ReversedEdgeImpl;
import de.uni_koblenz.jgralab.impl.std.EdgeImpl;

import de.uni_koblenz.jgralab.EdgeDirection;
import de.uni_koblenz.jgralab.Graph;
import de.uni_koblenz.jgralab.GraphIO;
import de.uni_koblenz.jgralab.GraphIOException;

import java.io.IOException;

import schemas.categoryschema.Category;

public class ReversedHasSubcategoryImpl extends ReversedEdgeImpl implements de.uni_koblenz.jgralab.Edge, schemas.categoryschema.HasSubcategory {

	ReversedHasSubcategoryImpl(EdgeImpl e, Graph g) {
		super(e, g);
	}

	@Override
	public final de.uni_koblenz.jgralab.schema.EdgeClass getAttributedElementClass() {
		return getNormalEdge().getAttributedElementClass();
	}

	public boolean is_backwardArc() {
		return ((schemas.categoryschema.HasSubcategory)normalEdge).is_backwardArc();
	}

	public void set_backwardArc(boolean _backwardArc) {
		((schemas.categoryschema.HasSubcategory)normalEdge).set_backwardArc(_backwardArc);
	}

	public boolean is_blacklisted() {
		return ((schemas.categoryschema.HasSubcategory)normalEdge).is_blacklisted();
	}

	public void set_blacklisted(boolean _blacklisted) {
		((schemas.categoryschema.HasSubcategory)normalEdge).set_blacklisted(_blacklisted);
	}

	public java.lang.String get_comment() {
		return ((schemas.categoryschema.HasSubcategory)normalEdge).get_comment();
	}

	public void set_comment(java.lang.String _comment) {
		((schemas.categoryschema.HasSubcategory)normalEdge).set_comment(_comment);
	}

	public boolean is_excluded() {
		return ((schemas.categoryschema.HasSubcategory)normalEdge).is_excluded();
	}

	public void set_excluded(boolean _excluded) {
		((schemas.categoryschema.HasSubcategory)normalEdge).set_excluded(_excluded);
	}

	public void readAttributeValues(GraphIO io) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValues for reversed Edges.");
	}

	public void readAttributeValueFromString(String attributeName, String value) throws GraphIOException {
		throw new GraphIOException("Can not call readAttributeValuesFromString for reversed Edges.");
	}

	public void writeAttributeValues(GraphIO io) throws GraphIOException, IOException {
		throw new GraphIOException("Can not call writeAttributeValues for reversed Edges.");
	}

	public String writeAttributeValueToString(String _attributeName) throws IOException, GraphIOException {
		throw new GraphIOException("Can not call writeAttributeValueToString for reversed Edges.");
	}

	public schemas.categoryschema.HasSubcategory getNextHasSubcategoryInGraph() {
		return ((schemas.categoryschema.HasSubcategory)normalEdge).getNextHasSubcategoryInGraph();
	}

	public schemas.categoryschema.HasSubcategory getNextHasSubcategoryIncidence() {
		return (schemas.categoryschema.HasSubcategory)getNextIncidence(schemas.categoryschema.HasSubcategory.class);
	}

	public schemas.categoryschema.HasSubcategory getNextHasSubcategoryIncidence(EdgeDirection orientation) {
		return (schemas.categoryschema.HasSubcategory)getNextIncidence(schemas.categoryschema.HasSubcategory.class, orientation);
	}
	public Category getAlpha() {
		return (Category) super.getAlpha();
	}
	public Category getOmega() {
		return (Category) super.getOmega();
	}
}
